{"version":3,"sources":["app/app.module.js","app/components/locale/locale.service.js","app/components/locale/locale.constants.js","app/components/language/languages.constants.js","app/components/language/language.service.js","app/components/bot/bot.service.js","app/blocks/handlers/settings.handler.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/localstorage.config.js","app/blocks/config/ translation.config.js","app/settings/settings.state.js","app/settings/settings.service.js","app/settings/settings.controller.js","app/services/snowcamp2017-replies.js","app/services/replies.service.js","app/services/mouth.service.js","app/services/microphone.service.js","app/services/luis.service.js","app/services/hears.service.js","app/services/brain.services.js","app/services/bing-speech.service.js","app/home/home.state.js","app/home/home.controller.js","i18n/angular-locale_fr.js","i18n/angular-locale_en.js","app/snowcamp2017.constants.js","app/app.state.js","app/app.constants.js","templateCacheHtml.js"],"names":["run","settingssHandler","initialize","angular","module","$inject","LocaleService","LOCALES","getAll","service","factory","constant","LanguageService","$q","$translate","LANGUAGES","tmhDynamicLocale","getCurrent","deferred","defer","language","storage","get","resolve","promise","changeLanguage","locale","languageKey","slice","use","set","Bot","$log","$rootScope","Hears","Brain","Replies","Mouth","name","$name","useName","startListening","isListening","stopListening","debug","then","utterance","$emit","getIntent","text","predict","reply","intent","converse","expression","speak","synthesize","Settings","Luis","BingSpeech","DEFAULTS","update","load","settingsSavedSuccess","$on","event","settings","isDefined","general","useLocale","stt","useSpeechToText","tts","useGender","gender","tss","useTextToSpeech","useNaturalLanguageProcessor","nlp","useSubscriptionKey","subscriptionKey","useApplication","application","translationStorageProvider","$cookies","indexOf","getObject","info","putObject","put","value","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","config","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","stateConfig","$stateProvider","state","parent","url","templateUrl","controller","controllerAs","translatePartialLoader","$translatePartialLoader","addPart","refresh","locales","luisApplications","getApplications","$localStorage","save","Object","assign","defaults","reset","SettingsController","$state","vm","go","this","languages","sttEngines","ttsEngines","nlpEngines","genders","luisApplciations","Snowcamp2017Replies","SNOWCAMP_2017","request","findTalk","none","entities","length","reject","status","data","words","word","talk","fuse","search","options","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","Fuse","$injector","useReplies","replies","$replies","$locale","$gender","$tts","getTTSInstance","Error","TextToSpeech","Microphone","$window","getAudioPermission","navigator","getUserMedia","audio","stream","error","startRecording","recorder","RecordRTC","type","numberOfAudioChannels","recording","stopRecording","getBlob","isRecording","webkitGetUserMedia","mozGetUserMedia","LuisProvider","$http","$subscriptionKey","$application","getApplication","$luisApiUrl","headers","Ocp-Apim-Subscription-Key","response","map","Name","appId","ID","predictEndpoint","push","post","getJsonData","descOrder","a","b","intentResponse","IntentsResults","sort","utteranceText","EntitiesResults","entity","indeces","start","startToken","end","endToken","$get","setLuisApiUrl","luisApiUrl","provider","$stt","$audio","getSTTInstance","sst","recognize","SpeechToText","$nlp","getNLPInstance","NaturalLanguageProcessor","BingSpeechProvider","uuid4","getToken","token","$BingSpeechApiUrl","params","version","requestid","generate","appID","format","device.os","scenarios","instanceid","Authorization","Content-Type","getSpeechResponse","font","$voices","ssml","$smmlTemplate","replace","responseType","Accept","X-Microsoft-OutputFormat","X-Search-AppId","X-Search-ClientID","speechResponse","header","lexical","charAt","toUpperCase","authenticationToken","tokenExpirationDate","Date","now","$issueTokenUrl","storeToken","$defaultSubscriptionKey","ar-EG female","de-DE female","de-DE male","en-AU female","en-CA female","en-GB female","en-GB male","en-IN male","en-US female","en-US male","es-ES female","es-ES male","es-MX male","fr-CA female","fr-FR female","fr-FR male","it-IT male","ja-JP female","ja-JP male","pt-BR male","ru-RU female","ru-RU male","zh-CN female","zh-CN male","zh-HK female","zh-HK male","zh-TW female","zh-TW male","useDefaultSubscriptionKey","defaultSubscriptionKey","HomeController","$scope","hotkeys","welcomeMessage","addBotMessage","message","values","getBotTranslated","getBotAudioUrl","audioUrl","messages","user","timestamp","getTime","content","image","addUserMessage","toggleRecording","process","handleRecordingError","handleBotResponse","handleConversationError","blob","Blob","URL","createObjectURL","submit","add","combo","description","instant","callback","$provide","PLURAL_CATEGORY","ZERO","ONE","TWO","FEW","MANY","OTHER","DATETIME_FORMATS","AMPMS","DAY","ERANAMES","ERAS","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","STANDALONEMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","NUMBER_FORMATS","CURRENCY_SYM","DECIMAL_SEP","GROUP_SEP","PATTERNS","gSize","lgSize","maxFrac","minFrac","minInt","negPre","negSuf","posPre","posSuf","id","localeID","pluralCat","n","opt_precision","i","getDecimals","getVF","v","undefined","Math","min","base","pow","f","vf","room","speakers","$urlRouterProvider","otherwise","abstract","template","$templateCache"],"mappings":"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AAA,OAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,MAAAC,KAAA,OAAAC,MAAA,QAmBAP,GAAAxP,MAAA,WACAgQ,kBACAC,OACA,KACA,MAEAC,KACA,SACA,SACA,UACA,YACA,WACA,SACA,YAEAC,UACA,gBACA,eAEAC,MACA,KACA,MAEAC,eAAA,EACAC,OACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEAC,UACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEAC,YACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEAC,iBACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEAC,cACA,EACA,GAEAC,SAAA,kBACAC,SAAA,YACAC,OAAA,qBACAC,WAAA,WACAC,WAAA,YACAC,QAAA,gBACAC,UAAA,SACAC,UAAA,UAEAC,gBACAC,aAAA,IACAC,YAAA,IACAC,UAAA,IACAC,WAEAC,MAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,EACAC,OAAA,EACAC,OAAA,IACAC,OAAA,GACAC,OAAA,GACAC,OAAA,KAGAR,MAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,EACAC,OAAA,EACAC,OAAA,KACAC,OAAA,GACAC,OAAA,IACAC,OAAA,MAIAC,GAAA,KACAC,SAAA,KACAC,UAAA,SAAAC,EAAAC,GAAA,GAAAC,GAAA,EAAAF,EAAAY,EAAAR,EAAAJ,EAAAC,EAAA,OAAA,IAAAC,GAAA,GAAAU,EAAAP,EAAAhD,EAAAE,IAAAF,EAAAM,YC5IA,WACA,YAEAtV,SACAC,OAAA,OACAO,SAAA,kBAEAgX,GAAA,mCACArV,KAAA,yBACAyS,YAAA,uWACA4D,KAAA,MACAC,UACA,mBAEAhL,MAAA,sBACAE,IAAA,aAGA6J,GAAA,mCACArV,KAAA,2DACAyS,YAAA,87BACA4D,KAAA,MACAC,UACA,oBAEAhL,MAAA,sBACAE,IAAA,aAGA6J,GAAA,mCACArV,KAAA,QACAyS,YAAA,GACA4D,KAAA,qBACAC,Y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","file":"../../scripts/app-3a13df303c.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular\n    .module('app', [\n      'ui.router',\n      'ui.bootstrap',\n      'ngStorage',\n      'ngCookies',\n      'uuid4',\n      'angularMoment',\n      'luegg.directives',\n      'ngCookies',\n      'tmh.dynamicLocale',\n      'pascalprecht.translate',\n      'cfp.hotkeys'\n    ]).run(run);\n\n  run.$inject = ['settingssHandler'];\n\n  function run(settingssHandler) {\n    settingssHandler.initialize();\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('LocaleService', LocaleService);\n\n  LocaleService.$inject = ['LOCALES'];\n\n  function LocaleService(LOCALES) {\n    var service = {\n      getAll: getAll\n    };\n\n    function getAll() {\n      return LOCALES;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n\n    /*\n     Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     They are written in English to avoid character encoding issues (not a perfect solution)\n     */\n    .constant('LOCALES', [\n      \"de-DE\",\n      \"es-ES\",\n      \"en-GB\",\n      \"en-US\",\n      \"fr-FR\",\n      \"it-IT\",\n      \"zh-CN\",\n      \"zh-TW\",\n      \"ja-JP\",\n      \"en-IN\",\n      \"pt-BR\",\n      \"ko-KR\",\n      \"fr-CA\",\n      \"en-AU\",\n      \"zh-HK\",\n      \"ar-EG\",\n      \"fi-FI\",\n      \"vpt-PT\",\n      \"en-NZ\",\n      \"pl-PL\",\n      \"en-CA\",\n      \"ru-RU\",\n      \"da-DK\",\n      \"nl-NL\",\n      \"ca-ES\",\n      \"nb-NO\",\n      \"es-MX\",\n      \"sv-SE\"\n    ]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n\n    /*\n     Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     They are written in English to avoid character encoding issues (not a perfect solution)\n     */\n    .constant('LANGUAGES', [\n      'en',\n      'fr'\n    ]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('LanguageService', LanguageService);\n\n  LanguageService.$inject = ['$q', '$translate', 'LANGUAGES', 'tmhDynamicLocale'];\n\n  function LanguageService($q, $translate, LANGUAGES, tmhDynamicLocale) {\n    var service = {\n      getAll: getAll,\n      getCurrent: getCurrent,\n      changeLanguage: changeLanguage\n    };\n\n    return service;\n\n    function getAll() {\n      return LANGUAGES;\n    }\n\n    function getCurrent() {\n      var deferred = $q.defer();\n      var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n      deferred.resolve(language);\n      return deferred.promise;\n    }\n\n    function changeLanguage(locale) {\n      var languageKey = locale.slice(0, 2);\n      if (languageKey) {\n        $translate.use(languageKey);\n        tmhDynamicLocale.set(languageKey);\n      }\n    }\n  }\n})();\n"," (function() {\n   'use strict';\n   angular\n     .module('app')\n     .factory('Bot', Bot);\n\n   Bot.$inject = ['$log', '$rootScope', 'Hears', 'Brain', 'Replies', 'Mouth'];\n\n   function Bot($log, $rootScope, Hears, Brain, Replies, Mouth) {\n     var service = {\n       startListening: startListening,\n       isListening: isListening,\n       stopListening: stopListening,\n       converse: converse,\n       speak: speak,\n       name: name,\n       useName: useName\n     };\n\n     var $name;\n\n     function name() {\n       return $name;\n     }\n\n     function useName(name) {\n       $name = name;\n     }\n\n     function startListening() {\n       Hears.startListening();\n     }\n\n     function isListening() {\n       return Hears.isListening();\n     }\n\n     function stopListening() {\n        $log.debug('There ');\n       return Hears.stopListening().then(function(utterance) {\n         $log.debug('Here ' + utterance);\n         $rootScope.$emit('bot:listened', utterance);\n         return utterance;\n       });\n     }\n\n     function getIntent(text) {\n       return Brain.predict(text);\n     }\n\n     function reply(intent) {\n       return Replies.reply(intent);\n     }\n\n     function converse(expression) {\n       return getIntent(expression).then(reply);\n     }\n\n     function speak(text) {\n       return Mouth.synthesize(text);\n     }\n\n     return service;\n   }\n })();\n","(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('settingssHandler', settingssHandler);\n\n  settingssHandler.$inject = ['$rootScope', 'Settings', 'Bot', 'Hears', 'Brain', 'Mouth', 'LanguageService', 'Luis', 'BingSpeech', 'DEFAULTS'];\n\n  function settingssHandler($rootScope, Settings, Bot, Hears, Brain, Mouth, LanguageService, Luis, BingSpeech, DEFAULTS) {\n    return {\n      initialize: initialize\n    };\n\n    function initialize() {\n      update(Settings.load());\n\n      var settingsSavedSuccess = $rootScope.$on('settings:saved', function (event, settings) {\n        update(settings);\n      });\n\n      $rootScope.$on('$destroy', function () {\n        if (angular.isDefined(settingsSavedSuccess) && settingsSavedSuccess !== null) {\n          settingsSavedSuccess();\n        }\n      });\n    }\n\n    function update(settings) {\n      Bot.useName(settings.general.name || DEFAULTS.general.name);\n      LanguageService.changeLanguage(settings.general.language || DEFAULTS.general.language);\n      Hears.useLocale(settings.stt.locale || DEFAULTS.stt.locale);\n      Hears.useSpeechToText(settings.stt.service || DEFAULTS.stt.service);\n      Mouth.useLocale(settings.tts.locale || DEFAULTS.tts.locale);\n      Mouth.useGender(settings.tts.gender || DEFAULTS.tss.gender);\n      Mouth.useTextToSpeech(settings.tts.service || DEFAULTS.tts.service);\n      Brain.useNaturalLanguageProcessor(settings.nlp.service || DEFAULTS.nlp.service);\n      Luis.useSubscriptionKey(settings.Luis.subscriptionKey || DEFAULTS.Luis.subscriptionKey);\n      Luis.useApplication(settings.Luis.application || DEFAULTS.Luis.application);\n      BingSpeech.useSubscriptionKey(settings.BingSpeech.subscriptionKey || DEFAULTS.BingSpeech.subscriptionKey);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('translationStorageProvider', translationStorageProvider);\n\n  translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n  function translationStorageProvider($cookies, $log, LANGUAGES) {\n    return {\n      get: get,\n      put: put\n    };\n\n    function get(name) {\n      if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n        $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to prefered language \"en\"');\n        $cookies.putObject(name, 'en');\n      }\n      return $cookies.getObject(name);\n    }\n\n    function put(name, value) {\n      $cookies.putObject(name, value);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(localStorageConfig);\n\n  localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n  function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n    $localStorageProvider.setKeyPrefix('goldorak-');\n    $sessionStorageProvider.setKeyPrefix('goldorak-');\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(translationConfig);\n\n  translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n  function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n    // Initialize angular-translate\n    $translateProvider.useLoader('$translatePartialLoader', {\n      urlTemplate: 'i18n/{lang}/{part}.json'\n    });\n\n    $translateProvider.preferredLanguage('en');\n    $translateProvider.useStorage('translationStorageProvider');\n    $translateProvider.useSanitizeValueStrategy('escaped');\n    $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n    tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n    tmhDynamicLocaleProvider.useCookieStorage();\n    tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider'];\n\n  function stateConfig($stateProvider) {\n    $stateProvider\n      .state('settings', {\n        parent: 'app',\n        url: '/settings',\n        templateUrl: 'app/settings/settings.html',\n        controller: 'SettingsController',\n        controllerAs: 'vm',\n        resolve: {\n          translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n            $translatePartialLoader.addPart('settings');\n            $translatePartialLoader.addPart('global');\n            return $translate.refresh();\n          }],\n          locales: ['LocaleService', function (LocaleService) {\n            return LocaleService.getAll();\n          }],\n          luisApplications: ['Luis', function (Luis) {\n            return Luis.getApplications();\n          }]\n        }\n      });\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Settings', Settings);\n\n  Settings.$inject = ['$localStorage', '$log', '$rootScope', 'DEFAULTS'];\n\n  function Settings($localStorage, $log, $rootScope, DEFAULTS) {\n    var service = {\n      save: save,\n      load: load,\n      reset: reset\n    };\n\n    var defaults = DEFAULTS;\n\n    var settings = load();\n    if (!settings) {\n      save(defaults);\n    }\n\n    function save(settings) {\n      settings = Object.assign({}, defaults, settings);\n      $localStorage.settings = settings;\n      $rootScope.$emit('settings:saved', settings);\n    }\n\n    function load() {\n      return $localStorage.settings;\n    }\n\n    function reset() {\n      save(DEFAULTS);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('SettingsController', SettingsController);\n\n  SettingsController.$inject = ['$log', '$state', 'Settings', 'locales', 'luisApplications'];\n\n  function SettingsController($log, $state, Settings, locales, luisApplications) {\n    var vm = this;\n    vm.languages = ['en', 'fr'];\n    vm.sttEngines = [{\n      name: 'Microsoft BingSpeech',\n      service: 'BingSpeech'\n    }];\n    vm.ttsEngines = [{\n      name: 'Microsoft BingSpeech',\n      service: 'BingSpeech'\n    }];\n    vm.nlpEngines = [{\n      name: 'Microsoft Luis',\n      service: 'Luis'\n    }];\n    vm.genders = ['female', 'male'];\n    vm.save = save;\n    vm.reset = reset;\n    vm.settings = Settings.load();\n    vm.locales = locales;\n    vm.luisApplciations = luisApplications;\n\n    function save() {\n      Settings.save(vm.settings);\n      $state.go('home');\n    }\n\n    function reset() {\n      Settings.reset();\n      $state.go('home');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('Snowcamp2017Replies', Snowcamp2017Replies);\n\n  Snowcamp2017Replies.$inject = ['$log', '$q', 'SNOWCAMP_2017'];\n\n  function Snowcamp2017Replies($log, $q, SNOWCAMP_2017) {\n    var service = {\n      reply: reply\n    };\n\n    var options = {\n      shouldSort: true,\n      threshold: 0.6,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: [\n        \"name\",\n        \"description\"\n      ]\n    };\n    var fuse = new Fuse(SNOWCAMP_2017, options);\n\n    function reply(request) {\n//      $log.debug('Request: ' + angular.toJson(request));\n      if (request.intent === 'GetTalkSchedule') {\n        return findTalk(request, 'talk.schedule');\n      }\n      if (request.intent === 'GetTalkRoom') {\n        return findTalk(request, 'talk.room');\n      }\n      if (request.intent === 'GetTalkSpeakers') {\n        return findTalk(request, 'talk.speakers');\n      }\n      return none(request);\n    }\n\n    function findTalk(request, reply) {\n      var deferred = $q.defer();\n      if (request.entities.length === 0) {\n        deferred.reject({\n          status: 'error',\n          reply: 'talk.error.no-talk-identified',\n          data: {\n            expression: request.expression\n          },\n          request: request\n        });\n        return deferred.promise;\n      }\n\n      var words = request.entities[0].word;\n      var talk = fuse.search(words)[0];\n      deferred.resolve({\n        status: 'success',\n        reply: reply,\n        data: {\n          talk: talk\n        },\n        request: request\n      });\n      return deferred.promise;\n    }\n\n    function none(request) {\n      var deferred = $q.defer();\n      deferred.resolve({\n        status: 'success',\n        reply: 'talk.none',\n        data: {\n          expression: request.expression\n        },\n        request: request\n      });\n      return deferred.promise;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('Replies', Replies);\n\n  Replies.$inject = ['$injector'];\n\n  function Replies($injector) {\n    var service = {\n      useReplies: useReplies,\n      reply: reply\n    };\n\n    var $replies = $injector.get('Snowcamp2017Replies');\n\n    function useReplies(replies) {\n      $replies = replies;\n    }\n\n    function reply(intent) {\n      return $replies.reply(intent);\n    }\n\n    return service;\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Mouth', Mouth);\n\n  Mouth.$inject = ['$injector', '$log', '$rootScope'];\n\n  function Mouth($injector, $log, $rootScope) {\n\n    var service = {\n      synthesize: synthesize,\n      useLocale: useLocale,\n      useGender: useGender,\n      useTextToSpeech: useTextToSpeech\n    };\n\n    var $locale;\n    var $gender;\n    var $tts;\n\n    function useLocale(locale) {\n      $locale = locale;\n      $log.debug('Text To Speech Locale: ' + $locale);\n    }\n\n    function useGender(gender) {\n      $gender = gender;\n      $log.debug('Text To Speech Gender: ' + $gender);\n    }\n\n    function useTextToSpeech(tts) {\n      $tts = tts;\n      $log.debug('Text To Speech Engine: ' + $tts);\n    }\n\n    function locale() {\n      return $locale;\n    }\n\n    function getTTSInstance() {\n      if ($tts) {\n        return $injector.get($tts);\n      }\n      throw new Error('You must define a TextToSpeech engine');\n    }\n\n    function synthesize(text) {\n      var TextToSpeech = getTTSInstance();\n      $rootScope.$emit('hears:onSynthesize', {\n        tts: $tts,\n        locale: $locale,\n        gender: $gender,\n        text: text\n      });\n      return TextToSpeech.synthesize(text, $locale, $gender);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Microphone', Microphone);\n\n  Microphone.$inject = ['$log', '$q', '$window'];\n\n  function Microphone($log, $q, $window) {\n    var service = {\n      startRecording: startRecording,\n      stopRecording: stopRecording,\n      isRecording: isRecording\n    };\n\n    $window.navigator.getUserMedia = $window.navigator.getUserMedia || $window.navigator.webkitGetUserMedia || $window.navigator.mozGetUserMedia;\n\n    function getAudioPermission() {\n      var deferred = $q.defer();\n      $window.navigator.getUserMedia({\n        audio: true\n      }, function (stream) {\n        deferred.resolve(stream);\n      }, function (error) {\n        deferred.reject(error);\n      });\n      return deferred.promise;\n    }\n\n    var recording = false;\n    var recorder;\n\n    function startRecording() {\n      getAudioPermission()\n        .then(function (stream) {\n          recorder = new RecordRTC(stream, {\n            type: 'audio',\n            numberOfAudioChannels: 1\n          });\n          recorder.startRecording();\n          recording = true;\n        }).catch(function (error) {\n          $log.error(error);\n        });\n    }\n\n    function stopRecording() {\n      var deferred = $q.defer();\n      recorder.stopRecording(function () {\n        recording = false;\n        deferred.resolve(recorder.getBlob());\n      });\n      return deferred.promise;\n    }\n\n    function isRecording() {\n      return recording;\n    }\n\n    return service;\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .provider('Luis', LuisProvider);\n\n  LuisProvider.$inject = [];\n\n  function LuisProvider() {\n    this.$get = Luis;\n\n    var $luisApiUrl = 'https://westus.api.cognitive.microsoft.com/luis/v1.0/prog/apps';\n    this.setLuisApiUrl = function (luisApiUrl) {\n      $luisApiUrl = luisApiUrl;\n    };\n\n    Luis.$inject = ['$http', '$log', '$rootScope'];\n\n    function Luis($http, $log, $rootScope) {\n      var service = {\n        useSubscriptionKey: useSubscriptionKey,\n        useApplication: useApplication,\n        getApplication: getApplication,\n        getApplications: getApplications,\n        predict: predict\n      };\n\n      var $subscriptionKey;\n      var $application;\n\n      function useSubscriptionKey(subscriptionKey) {\n        $subscriptionKey = subscriptionKey;\n      }\n\n      function useApplication(application) {\n        $application = application;\n      }\n\n      function getApplication() {\n        return $application;\n      }\n\n      function getApplications() {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        return $http.get($luisApiUrl, {\n          headers: {\n            'Ocp-Apim-Subscription-Key': $subscriptionKey\n          }\n        }).then(function (response) {\n          var data = response.data;\n          return data.map(function (application) {\n            return {\n              name: application.Name,\n              appId: application.ID\n            };\n          });\n        });\n      }\n\n      function predict(utterance) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        if (!$application) {\n          throw new Error(\"You must define at least one Luis application\");\n        }\n        $rootScope.$emit('luis:predict', {\n          application: $application,\n          utterance: utterance\n        });\n        var predictEndpoint = $luisApiUrl + \"/\" + $application.appId + \"/predict\";\n        var data = [];\n        data.push(utterance);\n        return $http.post(predictEndpoint, data, {\n          headers: {\n            'Ocp-Apim-Subscription-Key': $subscriptionKey\n          }\n        }).then(function(response) {\n          return getIntent(getJsonData(response));\n        });\n      }\n\n      function getJsonData(response) {\n        if (response && response.status === 200) {\n          return response.data[0];\n        }\n        throw new Error(\"Natural Language Understanding failed\");\n      }\n\n      function descOrder(a, b) {\n        return a - b;\n      }\n\n      function getIntent(intentResponse) {\n        var intent = intentResponse.IntentsResults.sort(descOrder)[0].Name;\n        var expression = intentResponse.utteranceText;\n        var entities = intentResponse.EntitiesResults.map(function (entity) {\n          return {\n            name: entity.name,\n            word: entity.word,\n            indeces: {\n              start: entity.indeces.startToken,\n              end: entity.indeces.endToken\n            }\n          };\n        });\n\n        var response = {\n          application: $application,\n          expression: expression,\n          intent: intent,\n          entities: entities\n        };\n\n        $rootScope.$emit('luis:getIntent', response);\n        return response;\n      }\n\n      return service;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Hears', Hears);\n\n  Hears.$inject = ['$injector', '$log', '$rootScope', 'Microphone'];\n\n  function Hears($injector, $log, $rootScope, Microphone) {\n\n    var service = {\n      startListening: startListening,\n      isListening: Microphone.isRecording,\n      stopListening: stopListening,\n      locale: locale,\n      audio: audio,\n      useLocale: useLocale,\n      useSpeechToText: useSpeechToText\n    };\n\n    var $locale;\n    var $stt;\n    var $audio;\n\n    function useLocale(locale) {\n      $locale = locale;\n      $log.debug('Speech To Text Locale: ' + $locale);\n    }\n\n    function useSpeechToText(stt) {\n      $stt = stt;\n      $log.debug('Speech To Text Engine: ' + $stt);\n    }\n\n    function locale() {\n      return $locale;\n    }\n\n    function audio() {\n      return $audio;\n    }\n\n    function getSTTInstance() {\n      if ($stt) {\n        return $injector.get($stt);\n      }\n      throw new Error('You must define a SpeechToText engine');\n    }\n\n    function startListening() {\n      Microphone.startRecording();\n      $rootScope.$emit('hears:onStartListening', {\n        sst: $stt,\n        locale: $locale\n      });\n    }\n\n    function stopListening() {\n      $rootScope.$emit('hears:onStopListening', {\n        sst: $stt,\n        locale: $locale\n      });\n      return Microphone\n        .stopRecording()\n        .then(recognize);\n    }\n\n    function recognize(audio) {\n      $audio = audio;\n      var SpeechToText = getSTTInstance();\n      $rootScope.$emit('hears:onRecognize', {\n        sst: $stt,\n        locale: $locale,\n        audio: audio\n      });\n      return SpeechToText.recognize(audio, $locale);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Brain', Brain);\n\n  Brain.$inject = ['$injector', '$log', '$rootScope'];\n\n  function Brain($injector, $log, $rootScope) {\n    var service = {\n      predict: predict,\n      useNaturalLanguageProcessor: useNaturalLanguageProcessor\n    };\n\n    var $nlp;\n\n    function useNaturalLanguageProcessor(nlp) {\n      $nlp = nlp;\n      $log.debug('Natural Language Processor Engine: ' + $nlp);\n    }\n\n    function getNLPInstance() {\n      if ($nlp) {\n        return $injector.get($nlp);\n      }\n      throw new Error('You must define a NaturalLanguageProcessor engine');\n    }\n\n    function predict(text) {\n      var NaturalLanguageProcessor = getNLPInstance();\n      $rootScope.$emit('brain:onProcess', {\n        nlp: $nlp,\n        text: text\n      });\n      return NaturalLanguageProcessor.predict(text);\n    }\n\n    return service;\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .provider('BingSpeech', BingSpeechProvider);\n\n  BingSpeechProvider.$inject = [];\n\n  function BingSpeechProvider() {\n    //Inspired by https://github.com/palmerabollo/bingspeech-api-client\n    this.$get = BingSpeech;\n\n    var $defaultSubscriptionKey;\n    var $BingSpeechApiUrl = 'https://speech.platform.bing.com';\n    var $issueTokenUrl = 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\n    var $smmlTemplate = \"<speak version=\\\"1.0\\\" xml:lang=\\\"%LOCALE%\\\"> <voice name=\\\"%FONT%\\\" xml:lang=\\\"%LOCALE%\\\" xml:gender=\\\"%GENDER%\\\">%TEXT%</voice></speak>\";\n\n    var $voices = {\n      'ar-EG female': 'Microsoft Server Speech Text to Speech Voice (ar-EG, Hoda)',\n      'de-DE female': 'Microsoft Server Speech Text to Speech Voice (de-DE, Hedda)',\n      'de-DE male': 'Microsoft Server Speech Text to Speech Voice (de-DE, Stefan, Apollo)',\n      'en-AU female': 'Microsoft Server Speech Text to Speech Voice (en-AU, Catherine)',\n      'en-CA female': 'Microsoft Server Speech Text to Speech Voice (en-CA, Linda)',\n      'en-GB female': 'Microsoft Server Speech Text to Speech Voice (en-GB, Susan, Apollo)',\n      'en-GB male': 'Microsoft Server Speech Text to Speech Voice (en-GB, George, Apollo)',\n      'en-IN male': 'Microsoft Server Speech Text to Speech Voice (en-IN, Ravi, Apollo)',\n      'en-US female': 'Microsoft Server Speech Text to Speech Voice (en-US, ZiraRUS)',\n      'en-US male': 'Microsoft Server Speech Text to Speech Voice (en-US, BenjaminRUS)',\n      'es-ES female': 'Microsoft Server Speech Text to Speech Voice (es-ES, Laura, Apollo)',\n      'es-ES male': 'Microsoft Server Speech Text to Speech Voice (es-ES, Pablo, Apollo)',\n      'es-MX male': 'Microsoft Server Speech Text to Speech Voice (es-MX, Raul, Apollo)',\n      'fr-CA female': 'Microsoft Server Speech Text to Speech Voice (fr-CA, Caroline)',\n      'fr-FR female': 'Microsoft Server Speech Text to Speech Voice (fr-FR, Julie, Apollo)',\n      'fr-FR male': 'Microsoft Server Speech Text to Speech Voice (fr-FR, Paul, Apollo)',\n      'it-IT male': 'Microsoft Server Speech Text to Speech Voice (it-IT, Cosimo, Apollo)',\n      'ja-JP female': 'Microsoft Server Speech Text to Speech Voice (ja-JP, Ayumi, Apollo)',\n      'ja-JP male': 'Microsoft Server Speech Text to Speech Voice (ja-JP, Ichiro, Apollo)',\n      'pt-BR male': 'Microsoft Server Speech Text to Speech Voice (pt-BR, Daniel, Apollo)',\n      'ru-RU female': 'Microsoft Server Speech Text to Speech Voice (ru-RU, Irina, Apollo)',\n      'ru-RU male': 'Microsoft Server Speech Text to Speech Voice (ru-RU, Pavel, Apollo)',\n      'zh-CN female': 'Microsoft Server Speech Text to Speech Voice (zh-CN, Yaoyao, Apollo)',\n      'zh-CN male': 'Microsoft Server Speech Text to Speech Voice (zh-CN, Kangkang, Apollo)',\n      'zh-HK female': 'Microsoft Server Speech Text to Speech Voice (zh-HK, Tracy, Apollo)',\n      'zh-HK male': 'Microsoft Server Speech Text to Speech Voice (zh-HK, Danny, Apollo)',\n      'zh-TW female': 'Microsoft Server Speech Text to Speech Voice (zh-TW, Yating, Apollo)',\n      'zh-TW male': 'Microsoft Server Speech Text to Speech Voice (zh-TW, Zhiwei, Apollo)'\n    };\n\n    this.useDefaultSubscriptionKey = function(defaultSubscriptionKey) {\n      $defaultSubscriptionKey = defaultSubscriptionKey;\n    };\n\n    BingSpeech.$inject = ['$log', '$http', '$localStorage', '$q', 'uuid4'];\n\n    function BingSpeech($log, $http, $localStorage, $q, uuid4) {\n      var service = {\n        recognize: recognize,\n        synthesize: synthesize,\n        useSubscriptionKey: useSubscriptionKey\n      };\n\n      var $subscriptionKey;\n\n      function useSubscriptionKey(subscriptionKey) {\n        $subscriptionKey = subscriptionKey;\n      }\n\n      function recognize(audio, locale) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        $log.debug(\"Recognizing audio with locale: \" + locale);\n        return getToken($subscriptionKey).then(function(token) {\n            return $http.post($BingSpeechApiUrl + '/recognize', audio, {\n              params: {\n                'version': '3.0',\n                'requestid': uuid4.generate(),\n                'appID': 'D4D52672-91D7-4C74-8AD8-42B1D98141A5', // magic value as per MS docs,\n                'format': 'json',\n                'locale': locale,\n                'device.os': '0_0',\n                'scenarios': 'ulm',\n                'instanceid': uuid4.generate()\n              },\n              headers: {\n                'Authorization': 'Bearer ' + token,\n                'Content-Type': 'audio/wav; samplerate=44100'\n              }\n            });\n          })\n          .then(function(response) {\n            return getSpeechResponse(getJsonData(response));\n          });\n      }\n\n      function synthesize(text, locale, gender) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        var font = $voices[locale + \" \" + gender];\n        $log.debug(\"Synthetizing text \\\"\" + text + \"\\\" with locale: \" + locale + \", gender: \" + gender + \" and font: \" + font);\n        var ssml = $smmlTemplate\n          .replace(/%LOCALE%/gi, locale)\n          .replace(/%GENDER%/gi, gender)\n          .replace(/%FONT%/gi, font)\n          .replace(/%TEXT%/gi, text);\n        return getToken($subscriptionKey).then(function(token) {\n          return $http.post($BingSpeechApiUrl + '/synthesize', ssml, {\n            responseType: 'arraybuffer',\n            headers: {\n              'Accept': 'audio/basic',\n              'Authorization': 'Bearer ' + token,\n              'Content-Type': 'application/ssml+xml',\n              'X-Microsoft-OutputFormat': 'riff-8khz-8bit-mono-mulaw',\n              'X-Search-AppId': '07D3234E49CE426DAA29772419F436CA',\n              'X-Search-ClientID': '1ECFAE91408841A480F00935DC390960'\n            }\n          });\n        });\n      }\n\n      function getJsonData(response) {\n        if (response) {\n          return response.data;\n        }\n        throw new Error(\"Bing Speech recognition's reponse is empty\");\n      }\n\n      function getSpeechResponse(speechResponse) {\n        if (speechResponse.header.status === \"success\") {\n          var text = speechResponse.header.lexical;\n          $log.debug('Here: ' + text);\n          return text.charAt(0).toUpperCase() + text.slice(1);\n        }\n        throw new Error(\"Speech recognition failed\");\n      }\n\n      function getToken(subscriptionKey) {\n        var deferred = $q.defer();\n        var token = $localStorage.authenticationToken;\n        var tokenExpirationDate = $localStorage.tokenExpirationDate;\n\n        if (token && tokenExpirationDate > Date.now()) {\n          deferred.resolve(token);\n        } else {\n          $http.post($issueTokenUrl, {}, {\n            headers: {\n              'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n          }).then(function(response) {\n            token = response.data;\n            storeToken(token);\n            deferred.resolve(token);\n          }).catch(function(error) {\n            $log.error(\"Unable to authenticate the request with subscription key: \" + subscriptionKey);\n            deferred.reject(error);\n          });\n        }\n        return deferred.promise;\n      }\n\n      function storeToken(token) {\n        $localStorage.authenticationToken = token;\n        //      Refresh access token every 9 minutes\n        $localStorage.tokenExpirationDate = Date.now() + 9 * 60 * 1000;\n      }\n\n      return service;\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider'];\n\n  function stateConfig($stateProvider) {\n    $stateProvider\n      .state('home', {\n        parent: 'app',\n        url: '/',\n        templateUrl: 'app/home/home.html',\n        controller: 'HomeController',\n        controllerAs: 'vm',\n        resolve: {\n          translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n            $translatePartialLoader.addPart('talk');\n            $translatePartialLoader.addPart('home');\n            $translatePartialLoader.addPart('global');\n            $translatePartialLoader.addPart('speech/home');\n            $translatePartialLoader.addPart('speech/talk');\n            return $translate.refresh();\n          }]\n        }\n      });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('HomeController', HomeController);\n\n  HomeController.$inject = ['$rootScope', '$scope', '$log', '$translate', '$q', 'hotkeys', 'Bot'];\n\n  function HomeController($rootScope, $scope, $log, $translate, $q, hotkeys, Bot) {\n    var vm = this;\n\n    vm.toggleRecording = toggleRecording;\n    vm.isRecording = Bot.isListening;\n    vm.submit = submit;\n    vm.messages = [];\n\n    hotkeys.add({\n      combo: 'ctrl+space',\n      description: $translate.instant('home.hotkey'),\n      callback: vm.toggleRecording\n    });\n\n    welcomeMessage();\n\n    function welcomeMessage() {\n      addBotMessage('home.welcome', {\n        name: Bot.name()\n      });\n    }\n\n    function addBotMessage(message, values) {\n      getBotTranslated(message, values)\n        .then(getBotAudioUrl)\n        .then(function (audioUrl) {\n          vm.messages.push({\n            user: Bot.name(),\n            timestamp: new Date().getTime(),\n            content: message,\n            values: values,\n            audio: audioUrl,\n            image: 'bot'\n          });\n        });\n    }\n\n    function addUserMessage(message) {\n      vm.messages.push({\n        user: \"me\",\n        timestamp: new Date().getTime(),\n        content: message,\n        image: 'me'\n      });\n    }\n\n    function toggleRecording() {\n      if (Bot.isListening()) {\n        Bot.stopListening().then(process).catch(handleRecordingError);\n      } else {\n        Bot.startListening();\n      }\n    }\n\n    function process(request) {\n      addUserMessage(request);\n\n      Bot.converse(request)\n        .then(handleBotResponse)\n        .catch(handleConversationError);\n    }\n\n    function getBotTranslated(message, values) {\n      return $translate(\"speech.\" + message, values);\n    }\n\n    function getBotAudioUrl(text) {\n      var deferred = $q.defer();\n      Bot.speak(text).then(function(audio) {\n        var blob = new Blob([audio.data], {\n          type: \"audio/basic\"\n        });\n        deferred.resolve(URL.createObjectURL(blob));\n      });\n      return deferred.promise;\n    }\n\n    function handleBotResponse(response) {\n      addBotMessage(response.reply, response.data);\n    }\n\n    function handleRecordingError(error) {\n      addBotMessage('home.stt.failed', {});\n    }\n\n    function handleConversationError(error) {\n      addBotMessage(error.reply, error.data);\n    }\n\n    function submit() {\n      if (vm.text) {\n        process(vm.text);\n      }\n      vm.text = \"\";\n    }\n  }\n})();\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"dimanche\",\n      \"lundi\",\n      \"mardi\",\n      \"mercredi\",\n      \"jeudi\",\n      \"vendredi\",\n      \"samedi\"\n    ],\n    \"ERANAMES\": [\n      \"avant J\\u00e9sus-Christ\",\n      \"apr\\u00e8s J\\u00e9sus-Christ\"\n    ],\n    \"ERAS\": [\n      \"av. J.-C.\",\n      \"ap. J.-C.\"\n    ],\n    \"FIRSTDAYOFWEEK\": 0,\n    \"MONTH\": [\n      \"janvier\",\n      \"f\\u00e9vrier\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"ao\\u00fbt\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"d\\u00e9cembre\"\n    ],\n    \"SHORTDAY\": [\n      \"dim.\",\n      \"lun.\",\n      \"mar.\",\n      \"mer.\",\n      \"jeu.\",\n      \"ven.\",\n      \"sam.\"\n    ],\n    \"SHORTMONTH\": [\n      \"janv.\",\n      \"f\\u00e9vr.\",\n      \"mars\",\n      \"avr.\",\n      \"mai\",\n      \"juin\",\n      \"juil.\",\n      \"ao\\u00fbt\",\n      \"sept.\",\n      \"oct.\",\n      \"nov.\",\n      \"d\\u00e9c.\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"Janvier\",\n      \"F\\u00e9vrier\",\n      \"Mars\",\n      \"Avril\",\n      \"Mai\",\n      \"Juin\",\n      \"Juillet\",\n      \"Ao\\u00fbt\",\n      \"Septembre\",\n      \"Octobre\",\n      \"Novembre\",\n      \"D\\u00e9cembre\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE d MMMM y\",\n    \"longDate\": \"d MMMM y\",\n    \"medium\": \"d MMM y HH:mm:ss\",\n    \"mediumDate\": \"d MMM y\",\n    \"mediumTime\": \"HH:mm:ss\",\n    \"short\": \"dd/MM/y HH:mm\",\n    \"shortDate\": \"dd/MM/y\",\n    \"shortTime\": \"HH:mm\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"\\u20ac\",\n    \"DECIMAL_SEP\": \",\",\n    \"GROUP_SEP\": \"\\u00a0\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\\u00a0\\u00a4\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\\u00a0\\u00a4\"\n      }\n    ]\n  },\n  \"id\": \"fr\",\n  \"localeID\": \"fr\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  if (i == 0 || i == 1) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\nfunction getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}\n\nfunction getVF(n, opt_precision) {\n  var v = opt_precision;\n\n  if (undefined === v) {\n    v = Math.min(getDecimals(n), 3);\n  }\n\n  var base = Math.pow(10, v);\n  var f = ((n * base) | 0) % base;\n  return {v: v, f: f};\n}\n\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    \"ERANAMES\": [\n      \"Before Christ\",\n      \"Anno Domini\"\n    ],\n    \"ERAS\": [\n      \"BC\",\n      \"AD\"\n    ],\n    \"FIRSTDAYOFWEEK\": 6,\n    \"MONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"SHORTDAY\": [\n      \"Sun\",\n      \"Mon\",\n      \"Tue\",\n      \"Wed\",\n      \"Thu\",\n      \"Fri\",\n      \"Sat\"\n    ],\n    \"SHORTMONTH\": [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE, MMMM d, y\",\n    \"longDate\": \"MMMM d, y\",\n    \"medium\": \"MMM d, y h:mm:ss a\",\n    \"mediumDate\": \"MMM d, y\",\n    \"mediumTime\": \"h:mm:ss a\",\n    \"short\": \"M/d/yy h:mm a\",\n    \"shortDate\": \"M/d/yy\",\n    \"shortTime\": \"h:mm a\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"$\",\n    \"DECIMAL_SEP\": \".\",\n    \"GROUP_SEP\": \",\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\\u00a4\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\\u00a4\",\n        \"posSuf\": \"\"\n      }\n    ]\n  },\n  \"id\": \"en\",\n  \"localeID\": \"en\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  var vf = getVF(n, opt_precision);  if (i == 1 && vf.v == 0) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n","(function () {\n  'use strict';\n// cat convertcsv.json| jq '[.[] | {id: .id, name: .name, description: .description, room: .venue, speakers: .speakers | split(\", \"), start: .event_start | strptime(\"%Y-%m-%d %H:%M:%S\") | mktime, end: .event_end | strptime(\"%Y-%m-%d %H:%M:%S\") | mktime}]'\n  angular\n    .module('app')\n    .constant('SNOWCAMP_2017', [\n      {\n        \"id\": \"0422b37f88b64759367a2465d882da00\",\n        \"name\": \"De git a la blockchain\",\n        \"description\": \"Vous utilisez git au quotidien et vous aimeriez bien comprendre comment fonctionne la blockchain ?<br /> Dans ce talk, on parlera de git, d'immutabilit&eacute;, de blockchain, de bitcoin et des liens entre tout &ccedil;a.<br />On essayera de construire une blockchain &agrave; partir de git, et on imaginera un workflow git qui s'inspire de la blockchain !\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Victor Sabatier\"\n        ],\n        \"start\": \"2017-02-09 15:00:00\",\n        \"end\": 1486655400\n      },\n      {\n        \"id\": \"08643593f5177cb06632c9f74c0f9be7\",\n        \"name\": \"Scalability & resiliency: all you need is orchestration!\",\n        \"description\": \"Scalability &amp; resiliency is more and more handled by devs techniques : applications scale horizontally, they're 'designed for failures', relying on microservice architectures... The time is long gone when each app was relying on its specifically designed infrastructure!<br /> <br /> But it doesn't mean it's no longer an ops concern: practices and tools just shifted to fit new needs. Here comes orchestration with tools like Kubernetes, Mesos, and more recently Docker.<br /> <br /> In this talk, you'll understand what orchestration challenge is all about, understand how devs should shape their apps, and how to setup an orchestration platform as an ops. And because we don't live in la la land, we'll also address some hard spots such as dealing with non-containerized assets.<br /> <br /> Most of all, you'll get a step by step live demo on how a containerized app runs on top of Kubernetes, Mesos and Docker solutions, explaining each approach.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Laurent Grangeau\"\n        ],\n        \"start\": \"2017-02-10 11:45:00\",\n        \"end\": 1486730100\n      },\n      {\n        \"id\": \"09553a9123ca102c07d11d1cb612308a\",\n        \"name\": \"Lunch\",\n        \"description\": \"\",\n        \"room\": \"World Trade Center\",\n        \"speakers\": [],\n        \"start\": \"2017-02-08 12:30:00\",\n        \"end\": 1486562400\n      },\n      {\n        \"id\": \"0e8f877c0cca52939368a6e5c33e8fc9\",\n        \"name\": \"Le Streaming d'API : pourquoi et comment transformer vos APIs statiques en donnees temps reel ?\",\n        \"description\": \"Nous savons que l'animation est essentielle pour l'interaction avec nos utilisateurs. Mais aujourd'hui l'interactivit&eacute; ne peut plus se r&eacute;sumer &agrave; l&rsquo;UX. Twitter, Waze, Slack &hellip; toutes les applications &agrave; succ&egrave;s utilisent le temps r&eacute;el pour rendre leurs utilisateurs addicts.<br /> Mais comment faire pour transformer votre API statique en un flux de donn&eacute;es temps-r&eacute;el ? Du pull ? Du push ? Des WebHooks? <br /> Vous connaissez s&ucirc;rement les Web-Sockets, mais avez vous d&eacute;j&agrave; entendu parler de Server-Sent Events ?<br /> <br /> Dans ce talk nous comparerons ces diff&eacute;rentes technologies pour comprendre dans quel cas elles s'appliquent le mieux avant de voir comment on peut aller encore plus loin en r&eacute;duisant la quantit&eacute; de donn&eacute;es &eacute;chang&eacute;es.<br /> Et parce qu'il n'y a pas que le web qui a besoin de temps r&eacute;el (et parce que c'est bien plus fun), je vous montrerai comment faire danser des drones sur des APIs stream&eacute;es.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Audrey Neveu\"\n        ],\n        \"start\": \"2017-02-09 11:45:00\",\n        \"end\": 1486643700\n      },\n      {\n        \"id\": \"0f60154295b8b61cc9af893a3ef194f9\",\n        \"name\": \"SnoopEE 2.0 - Microservices made Easy!\",\n        \"description\": \"Wouldn't it be nice to have a lean, non-intrusive, open source ecosystem based on standard technologies?<br /> <br /> The wait is over!<br /> <br /> SnoopEE 2.0 provides all the services you need to be able to focus solely on your business functionality. The boiler plate code for all the common patterns for distributed systems, such as discovery service, configuration management, ciruit breaker, load balancing etc. are handled by SnoopEE 2.0. And all by relying on standard technologies without relying on a long list of 3rd party frameworks. Creating microservices has never been easier.<br /> <br /> The discovery mechanism of SnoopEE has been around for a while, and with SnoopEE 2.0 a complete ecosystem for microservices is provided as an alternative to other comparable frameworks such as Spring Cloud. SnoopEE 2.0 is Microprofile 1.0 compliant.<br /> <br /> The slides for this session will be backed up by a demo to show key concepts and tools.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Ivar Grimstad\"\n        ],\n        \"start\": \"2017-02-10 16:00:00\",\n        \"end\": 1486745400\n      },\n      {\n        \"id\": \"1006893b2ceeaeee367f0d198ce89455\",\n        \"name\": \"Mon application React/Redux en production en 3h avec firebase\",\n        \"description\": \"Je commence React/Redux et je ne sais pas trop comment d&eacute;marrer.<br /> Quelles sont les biblioth&egrave;ques &agrave; utiliser ?<br /> Quelles sont les conventions que je vais mettre en place ?<br /> Et surtout pourquoi ?<br /> <br /> Dans cette **universit&eacute;** de trois heures nous allons, ensemble, transformer une application primitive en une application pr&ecirc;te &agrave; &ecirc;tre d&eacute;ploy&eacute;e (avec firebase).<br /> <br /> Une premi&egrave;re application servira de base et sera utilis&eacute;e comme piq&ucirc;re de rappel sur React/Redux.<br /> Puis nous parcourrons les diff&eacute;rentes biblioth&egrave;ques classiques d'une telle stack en refactorisant l&rsquo;application &agrave; chaque brique ajout&eacute;e.<br /> <br /> Nous parlerons, entre autres, des **actions asynchrone**, des **optimisations de container** et du **router**.<br /> Nous reviendrons sur la configuration webpack pour faire du Sass scop&eacute; et autoprefix&eacute;.<br /> <br /> Finalement avec tout &ccedil;a, j'esp&egrave;re que nous aurons le temps de parler des Higher Order Components !<br /> <br /> ---<br /> <br /> Les pr&eacute;-requis sont disponibles ici : https://github.com/fabienjuif/react-redux-codelab\",\n        \"room\": \"WTC Kilimandjaro 1\",\n        \"speakers\": [\n          \"Fabien JUIF\"\n        ],\n        \"start\": \"2017-02-08 09:30:00\",\n        \"end\": 1486557000\n      },\n      {\n        \"id\": \"178edd9a32c672273ce4e4eb2d95efd7\",\n        \"name\": \"Les infrastructures immuables et la configuration declarative ont supprime la douleur de la gestion des serveurs !\",\n        \"description\": \"Avant, j'utilisais beaucoup Debian pour h&eacute;berger les sites de mon entreprise. Puis j'ai d&eacute;couvert [NixOS](https://nixos.org/). C'est une distribution Linux construite sur les principes de l'infrastructure immuable : il y a une s&eacute;paration claire entre les donn&eacute;es variables et le reste, reste qui est g&eacute;r&eacute; de mani&egrave;re d&eacute;clarative et reproductible.<br /> <br /> J'expliquerai ce qu'est NixOS, comment &ccedil;a marche et pourquoi c'est un *game changer* pour moi (et peut &ecirc;tre pour vous) !\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"David Sferruzza\"\n        ],\n        \"start\": \"2017-02-10 16:00:00\",\n        \"end\": 1486745400\n      },\n      {\n        \"id\": \"1abb4ffe53097ab613a0c862a928265e\",\n        \"name\": \"Lunch\",\n        \"description\": \"\",\n        \"room\": \"Public Space\",\n        \"speakers\": [],\n        \"start\": \"2017-02-09 12:35:00\",\n        \"end\": 1486648800\n      },\n      {\n        \"id\": \"1c42c274bedf66f4ce153df337711970\",\n        \"name\": \"Une usine logicielle pour vos web agencies : notre solution avec Openshift\",\n        \"description\": \"Il s&rsquo;agit d&rsquo;un retour d'exp&eacute;rience sur la mise en place d&rsquo;Openshift au sein d&rsquo;un groupe d&rsquo;assurances (Le client n&rsquo;a pas encore donn&eacute; son accord pour &ecirc;tre nomm&eacute;).<br /> Le but est de pr&eacute;senter le projet, son objectif, sa mise en oeuvre, les difficult&eacute;s que nous avons rencontr&eacute;es, les gains que nous en avons obtenu et ce que nous en avons retenu .<br /> <br /> <br /> Le plan (susceptible d'&eacute;voluer):<br /> - Le projet original (5 min)<br /> - L'architecture technique (20 min)<br /> - Openshift (master/nodes/etcd)<br /> - Le portail (api/rest)<br /> - Les templates <br /> - Les difficult&eacute;s (15 minutes)<br /> - Les PV<br /> - Les images<br /> - La documentation<br /> - Les gains (15 minutes)<br /> - Tra&ccedil;abilit&eacute;<br /> - S&eacute;curit&eacute;<br /> - R&eacute;activit&eacute;<br /> - Conclusion &amp; Questions / R&eacute;ponses (5 min)\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Charles Sabourdin\"\n        ],\n        \"start\": \"2017-02-10 15:00:00\",\n        \"end\": 1486741800\n      },\n      {\n        \"id\": \"1f3858e27157bf4bf28a4f7eafd32504\",\n        \"name\": \"[Keynote] Comment OpenStack integre 90000 commits par an\",\n        \"description\": \"OpenStack est un des projets Open Source les plus actifs, avec plus de<br />2500 developpeurs, plus de 300 organisations, 90000 commits par an,<br />14000 changements propos&eacute;s par mois et 23000 tests lanc&eacute;s par jour.<br />Comment est organis&eacute; le d&eacute;veloppement ? Comment r&eacute;duit-t'on le risque de<br />regression dans une pile logicielle si complexe ? Quels outils sont-ils<br />utilis&eacute;s dans l'infrastructure du projet ? Quels challenges ont-ils &eacute;t&eacute;<br />rencontr&eacute;s et comment ont-ils &eacute;t&eacute; surmont&eacute;s ?<br /><br />Dans cette pr&eacute;sentation, Thierry Carrez, Directeur de l'Ing&eacute;nierie &agrave; la<br />Fondation OpenStack, va d&eacute;tailler les principes, m&eacute;thodologies et outils<br />utilis&eacute;s dans le projet OpenStack. Apr&egrave;s une br&egrave;ve pr&eacute;sentation du<br />projet et de sa gouvernance, nous plongerons dans le d&eacute;tails de<br />l'infrastructure du projet (enti&egrave;rement open source, int&eacute;gr&eacute;e en continu<br />et utilisant les ressources de multiples cloud publics OpenStack). Nous<br />reviendrons sur les challenges pass&eacute;s, et nous aborderons les challenges<br />&agrave; venir. La pr&eacute;sentation sera suivie d'une session de questions-r&eacute;ponses<br />durant laquelle Thierry r&eacute;pondra &agrave; toutes les questions que vous<br />pourriez avoir sur cette pr&eacute;sentation ou sur OpenStack en g&eacute;n&eacute;ral.\",\n        \"room\": \"Espace Vie Etudiante (EVE)\",\n        \"speakers\": [\n          \"Thierry Carrez\"\n        ],\n        \"start\": \"2017-02-10 09:00:00\",\n        \"end\": 1486720800\n      },\n      {\n        \"id\": \"23d2a861e327eb849247f17b55ce5d16\",\n        \"name\": \"Authentication using One-Time-Password Token and Smart Card\",\n        \"description\": \"Authentication is one of the major components of security. Despite the<br /> importance of this area of security, many people are still using<br /> password-based authentication for access to many services. This talk<br /> will describe and demo how you can use free and open-source software like FreeIPA<br /> and SSSD to provide strong two-factor authentication methods such as<br /> one-time passwords (OTP) and smart cards with X.509 certificates.<br /> <br /> About the authors: We are software developers and support engineers, all working on FreeIPA and LDAP. FreeIPA is a free and open-source software infrastructure project providing Active Directory-like services to Linux and other POSIX-compatible operating systems.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"thierry bordaz\"\n        ],\n        \"start\": \"2017-02-09 10:45:00\",\n        \"end\": 1486640100\n      },\n      {\n        \"id\": \"2408f62d515772b66e9226202cab9afe\",\n        \"name\": \"La reconnaissance d'image par reseau de neurones\",\n        \"description\": \"De l'identification des visages dans les r&eacute;seaux sociaux, &agrave; la d&eacute;tection des signalisations dans les voitures autonomes, Les r&eacute;seaux neurones &agrave; convolution (CNN) ont r&eacute;volutionn&eacute; la reconnaissance d&rsquo;image, mais comment fonctionnent-ils ? comment peut-on les impl&eacute;ment&eacute;s ? c&rsquo;est ce qu&rsquo;on d&eacute;taillera dans cette session.<br /> <br /> Le talk commencera par une courte introduction aux RN, suivie par un focus sur les CNN, ses use cases, les diff&eacute;rentes couches qui composent ce type de r&eacute;seau. Ensuite on pr&eacute;sentera des diff&eacute;rents r&eacute;seaux optimis&eacute;s pour la classification, la d&eacute;tection et la segmentation des images. et on fera le tour des framework utilis&eacute;s pour construire ces r&eacute;seaux. et on finira par un exemple de classification impl&eacute;ment&eacute; en Tensorflow et Deeplearning4j.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Walid chergui\"\n        ],\n        \"start\": \"2017-02-09 14:00:00\",\n        \"end\": 1486651800\n      },\n      {\n        \"id\": \"298da4f27929676565313c5acc251d14\",\n        \"name\": \"Welcome breakfast\",\n        \"description\": \"\",\n        \"room\": \"Espace Vie Etudiante (EVE)\",\n        \"speakers\": [],\n        \"start\": \"2017-02-09 08:00:00\",\n        \"end\": 1486630800\n      },\n      {\n        \"id\": \"2e110d84478819c83ef6fe3018c59469\",\n        \"name\": \"Les reseaux LPWAN pour connecter tous vos objets, des aujourd'hui\",\n        \"description\": \"D&eacute;couvrons les technologies LoRaWan et Sigfox avec leur points communs et leur sp&eacute;cificit&eacute;s pour bien comprendre ce en quoi elles sont toutes deux les cl&eacute;s de la r&eacute;volution en marche des objets connect&eacute;s.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Paul Pinault\"\n        ],\n        \"start\": \"2017-02-10 10:45:00\",\n        \"end\": 1486726500\n      },\n      {\n        \"id\": \"306a0121b5dc653987d19d08b50163d2\",\n        \"name\": \"Apache Spark : Hands-on et use cases pour developpeurs Java\",\n        \"description\": \"Spark est un framework open source de calcul distribu&eacute;, utilis&eacute; pour faire de l'analyse de donn&eacute;e sur de grands volumes. Mais devons-nous &ecirc;tre 'data scientist' et passionn&eacute; de Scala pour l'utiliser ?<br />Non seulement l'analyse de donn&eacute;e avec Spark est &agrave; port&eacute;e de tout d&eacute;veloppeur Java, mais elle permet d'avoir un impact direct sur le business. Depuis la version 2.0 de Spark, l'API des DataFrames permet de profiter des optimisations du moteur d'ex&eacute;cution peu importe le langage utilis&eacute;, dont Java. <br />Nous allons utiliser Spark sur diff&eacute;rentes sources de donn&eacute;es (fichiers plats, MySQL, Cassandra) et dans des cas d'usages concrets bas&eacute;s sur les donn&eacute;es de LesFurets.com (avec &eacute;criture de tests unitaires), en passant en revue les principales fonctionnalit&eacute;s du moteur, soit Spark Core, Spark SQL, Spark Streaming et Spark MLlib (Machine Learning Library), dans une pr&eacute;sentation alternant slides et d&eacute;monstrations live.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Alexandre Dubreuil\"\n        ],\n        \"start\": \"2017-02-09 10:45:00\",\n        \"end\": 1486640100\n      },\n      {\n        \"id\": \"3a603ce7f48df740da54d97b0d52f09c\",\n        \"name\": \"Distributed tracing for dummies\",\n        \"description\": \"D&eacute;couvrons comment mettre en place 'from scratch' une solution de tra&ccedil;age de requ&ecirc;te dans un environnement distribu&eacute; avec une quantit&eacute; de code minimal!<br /> Au programme Spring Cloud Sleuth, ElasticSearch, Zipkin ... le tout en live coding !\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Florian Garcia\"\n        ],\n        \"start\": \"2017-02-09 14:00:00\",\n        \"end\": 1486651800\n      },\n      {\n        \"id\": \"3dd57a1b68703f2af76a9ea93401182c\",\n        \"name\": \"Ingest node : (re)indexer et enrichir des documents dans Elasticsearch\",\n        \"description\": \"Lorsque vous injectez des donn&eacute;es dans elasticsearch, vous pouvez avoir besoin de r&eacute;aliser des op&eacute;rations de transformation assez simples. Jusqu'&agrave; pr&eacute;sent, ces op&eacute;rations devaient s'effectuer en dehors d'elasticsearch, avant l'indexation proprement dite.<br /> <br /> Souhaitez la bienvenue &agrave; Ingest node ! Un nouveau type de noeud qui vous permet justement de faire cela.<br /> <br /> Ce talk explique le concept de Ingest Node, comment l'int&eacute;grer avec le reste de la suite logicielle Elastic et comment d&eacute;velopper son propre plugin Ingest par la pratique en montrant comment j'ai d&eacute;velopp&eacute; le plugin 'ingest-bano' pour enrichir des adresses postales et/ou des coordonn&eacute;es g&eacute;ographiques fran&ccedil;aises (pour l'instant).<br /> <br /> Ce talk parlera &eacute;galement de l'API de r&eacute;indexation qui peut &eacute;galement b&eacute;n&eacute;ficier du pipeline d'ingestion pour modifier vos donn&eacute;es &agrave; la vol&eacute;e lors de la r&eacute;indexation.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Sylvain Wallez\"\n        ],\n        \"start\": \"2017-02-10 11:45:00\",\n        \"end\": 1486730100\n      },\n      {\n        \"id\": \"40af8047dcc3f91e59139e0edd67a0e3\",\n        \"name\": \"RabbitMQ 101 : job scheduling, microservices communication, event-based data stream... How to cook the rabbit?\",\n        \"description\": \"Lots of people need job scheduling, microservices communication, asynchronous message passing&hellip; There is a stable and reliable solution: AMQP. Event if it seems to be complicated at first, it can solve lots of problems. RabbitMQ is a stable and battle tested product, has great performance, and provides simple access from C, java, python, ruby, node.js, scala, go&hellip; This talk is about rabbitMQ, how to start using it, how to work with it, fundamental and various pattern to use it in real world cases.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Quentin ADAM\"\n        ],\n        \"start\": \"2017-02-09 15:00:00\",\n        \"end\": 1486655400\n      },\n      {\n        \"id\": \"4ac9d6b5b30813c67667ee4de3c2df12\",\n        \"name\": \"TypeScript 2.0, emergence des transpileurs et futur de JavaScript\",\n        \"description\": \"JavaScript est le langage le plus utilis&eacute; dans le monde. <br /> Aujourd'hui l'av&egrave;nement de ES6 puis ES7, la mont&eacute;e en puissance de node.js cot&eacute; backend et l'apparition de transpillers comme TypeScript vont encore augmenter le potentiel du d&eacute;v web. <br /> Les transpillers comme TypeScript permettent d&egrave;s aujourd'hui de b&eacute;n&eacute;ficier de nouvelles features et de nouveaux outils pour &ecirc;tre encore plus productif. <br /> Durant cette session, nous verrons ce que peut apporter TypeScript pour aborder l'avenir de JavaScript : D&eacute;corateurs, Metadata ou encore Non nullables Types. <br /> Enfin, nous aborderons ce que pourrait devenir JavaScript demain en abordant aussi la venue de WebAssembly, SIMD ou encore asm.js <br /> Session d&eacute;finitivement d&eacute;di&eacute;e aux d&eacute;veloppeurs Web Front End, et autre passionn&eacute;s de technos !\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Sebastien Pertus\"\n        ],\n        \"start\": \"2017-02-09 16:00:00\",\n        \"end\": 1486659000\n      },\n      {\n        \"id\": \"4de365b8df93e8be8d784d46e211ee1e\",\n        \"name\": \"La revanche du in-memory: la pate thermique entre vos applis et vos donnees - un exemple avec Infinispan\",\n        \"description\": \"De nos jours, les applis g&eacute;n&egrave;rent de la donn&eacute;e, beaucoup de donn&eacute;es.<br /> Les applis et les microservices en g&eacute;n&eacute;ral consomment une partie tr&egrave;s sp&eacute;cifique de mon g&acirc;teau de donn&eacute;es et jamais sous la m&ecirc;me forme.<br /> Sans compter que la donn&eacute;es doit &ecirc;tre tortur&eacute;e pour l&rsquo;analyser jusqu'&agrave; la derni&egrave;re goutte. <br /> Et par dessus le march&eacute; &ccedil;a serait bien si c&rsquo;&eacute;tait rapide tout &ccedil;a !<br /> <br /> Les syst&egrave;mes in-memory comme Infinispan peuvent vous y aider.<br /> Venez discuter des architectures et des situations o&ugrave; un syst&egrave;me in-memory est int&eacute;ressant.<br /> Nous allons en particulier plonger dans le spectre possible des capacit&eacute;s de requ&ecirc;tage: en partant des requ&ecirc;tes classiques, full-text ou spatiales (Lucene), en passant par Map/Reduce, les requ&ecirc;tes dites en continu (ou r&eacute;active), l&rsquo;ex&eacute;cution de code distribu&eacute; et m&ecirc;me Hadoop et Spark.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Emmanuel Bernard\"\n        ],\n        \"start\": \"2017-02-10 10:45:00\",\n        \"end\": 1486726500\n      },\n      {\n        \"id\": \"53a3708890c0ddff5c361cd4c328641b\",\n        \"name\": \"Quelle plateforme IoT pour mon decapsuleur connecte ?\",\n        \"description\": \"Bon, la pompe &agrave; bi&egrave;re et le d&eacute;capsuleur connect&eacute;s, on a d&eacute;j&agrave;. <br /> Maintenant, on a besoin d'interconnecter les objets, de g&eacute;rer plusieurs protocoles, de traiter les donn&eacute;es et &eacute;v&eacute;nements au fil de l'eau, de s&eacute;curit&eacute; (important pour la bi&egrave;re), ...<br /> Testons diff&eacute;rentes plateformes IoT pour savoir laquelle est actuellement la plus pertinente pour g&eacute;rer tout &ccedil;a ?\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Gwennael BUCHET\",\n          \"Adrien Legrand\"\n        ],\n        \"start\": \"2017-02-10 11:45:00\",\n        \"end\": 1486730100\n      },\n      {\n        \"id\": \"56c70570aca9438e399183761f27b611\",\n        \"name\": \"GnuPG, Keybase, le web of trust : a quoi ca sert ?\",\n        \"description\": \"On r&eacute;sume souvent la s&eacute;curit&eacute; des &eacute;changes sur Internet &agrave; SSL/TLS/HTTPS, mais en creusant on peut tomber sur des outils comme GnuPG et des notions de 'web of trust'. Leur int&eacute;r&ecirc;t peut para&icirc;tre limit&eacute;, et la complexit&eacute; de leur mise en &oelig;uvre les limite sans doute aux purs et durs de la s&eacute;curit&eacute;... Dans cette pr&eacute;sentation, vous d&eacute;couvrirez quelques usages r&eacute;els du web of trust, l'int&eacute;r&ecirc;t (ou non) de GnuPG et des tentatives de simplification telles que Keybase.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Stephen Kitt\"\n        ],\n        \"start\": \"2017-02-09 11:45:00\",\n        \"end\": 1486643700\n      },\n      {\n        \"id\": \"609f5c08f9f53cc3e7b7668664f291e1\",\n        \"name\": \"Conquerir le monde avec CoreOs\",\n        \"description\": \"Sur le fond d'un star wars camp, nous vous proposons de r&eacute;aliser le plus grand cluster de CoreOs jamais cr&eacute;&eacute; ! Un peu d'Ansible par ci et un peu de Fleet par la, et nous voici avec une arm&eacute;e de Docker &agrave; disposition !<br /> <br /> Et si les Ewok prenaient le pouvoir et installaient Kubernetes pour remplacer Fleet sur ce CoreOs que se passerait il ?<br /> <br /> Rejoignez cette exp&eacute;rience XXL.\",\n        \"room\": \"WTC Mont-Blanc 4\",\n        \"speakers\": [\n          \"Yan Matagne\",\n          \"Antoine Stalin\"\n        ],\n        \"start\": \"2017-02-08 09:30:00\",\n        \"end\": 1486557000\n      },\n      {\n        \"id\": \"6c779ae882a2a06f4418dfafcfa35873\",\n        \"name\": \"Welcome\",\n        \"description\": \"\",\n        \"room\": \"World Trade Center\",\n        \"speakers\": [],\n        \"start\": \"2017-02-08 09:00:00\",\n        \"end\": 1486546200\n      },\n      {\n        \"id\": \"70a50a0655530d234d2c42d7620ac8a8\",\n        \"name\": \"[Keynote] Open Source Challenges in the Enterprise\",\n        \"description\": \"Open  source has gone from being the domain of academic researchers to the  forefront of enterprise development and deployment. All of the most  significant industrial waves of the past two decades have had open  source at their heart, whether it's Linux for the operating system,  Android for mobile or JBoss and Tomcat for application servers. In this  talk we'll discuss why open source has been adopted within enterprises  for mission critical environments and what reliability and dependability  challenges it has faced as a result. We'll also look at the impact open  source is having on things such as Internet of Things.\",\n        \"room\": \"Espace Vie Etudiante (EVE)\",\n        \"speakers\": [\n          \"Mark Little\"\n        ],\n        \"start\": \"2017-02-09 09:00:00\",\n        \"end\": 1486634400\n      },\n      {\n        \"id\": \"73200c4ed5b5bd6ab4456501faa39e17\",\n        \"name\": \"Premiers pas en Deep Learning avec Keras\",\n        \"description\": \"**Keras** est une librairie d&eacute;di&eacute;e au **deep learning** dont les objectifs principaux sont l'exp&eacute;rimentation rapide et la facilit&eacute; d'utilisation.<br /> <br /> D&eacute;mocratis&eacute; ces derni&egrave;res ann&eacute;es avec l'augmentation des capacit&eacute;s de stockage et de calcul, popularis&eacute; par les g&eacute;ants du WEB, le deep learning peut apporter des solutions dans des domaines comme la classification d'images, la reconnaissance vocale, l'analyse de texte, la g&eacute;n&eacute;tique, les chatbots ou m&ecirc;me la cr&eacute;ation artistique.<br /> <br /> Apr&egrave;s avoir tent&eacute; de d&eacute;finir un peu plus pr&eacute;cis&eacute;ment ce qu'est le deep learning et parcouru l'API propos&eacute;e par Keras, nous verrons lors de cette session que quelques lignes de python peuvent suffire pour impl&eacute;menter des premiers mod&egrave;les de **traitement automatique de langage naturel** ou de **classification d'images**.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Manuel Verriez\"\n        ],\n        \"start\": \"2017-02-09 16:00:00\",\n        \"end\": 1486659000\n      },\n      {\n        \"id\": \"74190f52fac395f905763df22bd9e5d6\",\n        \"name\": \"Welcome breakfast\",\n        \"description\": \"\",\n        \"room\": \"Espace Vie Etudiante (EVE)\",\n        \"speakers\": [],\n        \"start\": \"2017-02-10 08:00:00\",\n        \"end\": 1486717200\n      },\n      {\n        \"id\": \"761bf3e58219a1f597de337887ec746a\",\n        \"name\": \"Serverless : transition du monolithique au systeme distribue\",\n        \"description\": \"C'est l'histoire d'une application web. De base monolithique, elle a &eacute;volu&eacute; pour int&eacute;grer de mani&egrave;re massive des technologies de type 'serverless' (pool de 2000 AWS Lambda en production) : am&eacute;lioration drastique des performances, meilleure exp&eacute;rience utilisateur. L'introduction de cette technologie a surtout transform&eacute; au plus profond l'architecture de l'application en un syst&egrave;me distribu&eacute;&hellip; et avec ma vision de tous mes futurs d&eacute;veloppements.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Yves Brissaud\"\n        ],\n        \"start\": \"2017-02-10 14:00:00\",\n        \"end\": 1486738200\n      },\n      {\n        \"id\": \"7678c65bf08c1d745a569f2b1343bc4d\",\n        \"name\": \"Oubliez les migraines, faites de l'asynchrone... synchrone !\",\n        \"description\": \"Tout d&eacute;veloppeur JavaScript &ndash; m&ecirc;me celui qui n'ose pas se l'avouer &ndash; a subi un jour le callback hell &agrave; cause de l'asynchrone. Aujourd'hui, de nouveaux outils du langage nous permettent de g&eacute;rer bien plus &eacute;l&eacute;gamment nos appels asynchrones, &agrave; tel point qu'on en vient &agrave; faire de l'asynchrone... synchrone ! <br /> <br /> Je vous propose de d&eacute;couvrir cela au travers d'un live coding en partant de la code base cauchemardesque h&eacute;rit&eacute;e du stagiaire d&eacute;butant le JavaScript &ndash; si cela ne vous &eacute;voque rien, vous faites parti d'une minorit&eacute; miracul&eacute;e ! Nous utiliserons les promesses, les g&eacute;n&eacute;rateurs et les coroutines pour l'am&eacute;liorer progressivement, en notant au passage les pi&egrave;ges auxquels il ne faut pas succomber...\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Jordane Grenat\"\n        ],\n        \"start\": \"2017-02-10 11:45:00\",\n        \"end\": 1486730100\n      },\n      {\n        \"id\": \"8553cf102a39dc449586b9ad1438d9ac\",\n        \"name\": \"Zap it !\",\n        \"description\": \"Owasp Zed Attack Proxy: Zap, est un projet phare de l&rsquo;organisation OWASP. Ce scanner de vuln&eacute;rabilit&eacute; a &eacute;t&eacute; imagin&eacute; pour s&rsquo;adapter &agrave; votre contexte professionnel, que vous soyez auditeur, testeur fonctionnel ou d&eacute;veloppeur, Zap vous assistera &agrave; automatiser vos scans et r&eacute;pondra aux particularit&eacute;s de votre application.<br /> <br /> Lors de cette pr&eacute;sentation, nous allons balayer les usages basiques, puis nous allons nous essayer aux modules avanc&eacute;s et custom et de scripter sur le tas.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Zakaria RACHID\"\n        ],\n        \"start\": \"2017-02-10 14:00:00\",\n        \"end\": 1486738200\n      },\n      {\n        \"id\": \"863a85bdfb9eccad66a298d161c07e9b\",\n        \"name\": \"GraphQL vs Falcor\",\n        \"description\": \"L&rsquo;h&eacute;g&eacute;monie de l&rsquo;architecture REST est &eacute;branl&eacute;e par de nouveaux venus : GraphQL de Facebook et Falcor de Netflix. Comment ces deux technologies peuvent-elles nous aider &agrave; d&eacute;velopper des applications web plus rapidement ?<br /> <br /> <br /> Nous commencerons par une rapide introduction de GraphQL et Falcor : le concept qui se cache derri&egrave;re, leurs objectifs, ainsi que leur place dans nos architectures client-serveur.<br /> <br /> <br /> Nous vous proposerons ensuite de d&eacute;velopper une application mobile de transport en commun avec REST, GraphQL et Falcor afin de comparer l&rsquo;impact de ces technologies sur les propri&eacute;t&eacute;s du code et les co&ucirc;ts de d&eacute;veloppement. Cette comparaison sera assist&eacute;e par un outil de traduction de requ&ecirc;tes, con&ccedil;u par nos soins.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Antoine Cellier\",\n          \"Hugo Wood\"\n        ],\n        \"start\": \"2017-02-09 14:00:00\",\n        \"end\": 1486651800\n      },\n      {\n        \"id\": \"8fb97816f2fea04c7f08f34716172965\",\n        \"name\": \"Event Storming : comprendre le metier autrement\",\n        \"description\": \"Il n&rsquo;est jamais simple de mod&eacute;liser efficacement un syst&egrave;me. Nous proposons pour y parvenir de supprimer tout vocabulaire technique et de se mettre d'accord sur un langage commun &agrave; l'&eacute;quipe et sp&eacute;cifique au projet.<br /> Laissez mijoter l'intelligence collective des acteurs d'un projet devant un immense tableau blanc, pour &eacute;changer et d&eacute;crire les &eacute;v&egrave;nements pouvant &ecirc;tre produit dans le syst&egrave;me. Le r&eacute;sultat est un mod&egrave;le, absorbant des commandes et g&eacute;n&eacute;rant des &eacute;v&egrave;nements pour communiquer ses d&eacute;cisions. Vous verrez ainsi avec quelle rapidit&eacute;, la compr&eacute;hension globale du m&eacute;tier augmente. <br /> Et si vous venez &agrave; l'atelier CQRS et Event Sourcing, vous verrez comment impl&eacute;menter cette mod&eacute;lisation le plus simplement possible !\",\n        \"room\": \"WTC Mont-Blanc 2\",\n        \"speakers\": [\n          \"Emilien Pecoul\",\n          \"Florent Pellet\"\n        ],\n        \"start\": \"2017-02-08 14:00:00\",\n        \"end\": 1486573200\n      },\n      {\n        \"id\": \"a1befda45eb479f23e685a3bdce179e7\",\n        \"name\": \"Mixite dans le monde des webcomponents\",\n        \"description\": \"Ah, les web components, quelle belle id&eacute;e ! Un nouveau standard, du d&eacute;veloppement web bas&eacute; enfin sur une vraie architecture en composants, de la r&eacute;utilisation, de la modularisation, de l'encapsulation... Des choses que les d&eacute;veloppeurs backend ont depuis plus de trente ans enfin disponibles pour les d&eacute;veloppeurs web... Mais en attendant que le W3C d&eacute;cide de sortir le standard, ce qu'on a dans le mains c'est une promese d'un beau avenir et une panoplie de biblioth&egrave;ques cens&eacute;es combler le manque en attendant : Polymer, X-Tag, Bosoonic... Et r&eacute;cement, avec des React, Aurelia et d'autres Angular 2, il semble que tous les frameworks JS modernes s'orients vers les composants web. Dans ce talk on va essayer de r&eacute;pondre &agrave; une des questions qu'on nous pose le plus souvent quand nous parlons de web components : 'OK, le futur sera beau, mais aujourd'hui, si je fais des componsants avec une biblioth&egrave;que X et mon pote en fait avec une biblioth&egrave;que Y, je peux les utiliser dans la m&ecirc;me application ? Et ils marcheront dans mon framework favori ?' Et pour r&eacute;pondre a cette question, nous allons emprunter quelques techniques au monde de la musique avec un battle entre Cyril Balit et Horacio Gonzalez afin d'int&eacute;grer et faire parler des composants web dans un maximum de technologies. Car face &agrave; la tendance &agrave; se polariser avec des querelles de chapelles type Angula vs React vs Aurelia vs Polymer vs Meteor nous pr&eacute;f&eacute;rons le slogan *Let's work hand in hand and move the web forward*\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Horacio Gonzalez\",\n          \"Cyril Balit\"\n        ],\n        \"start\": \"2017-02-10 14:00:00\",\n        \"end\": 1486738200\n      },\n      {\n        \"id\": \"a1c888fcd20090b4c76f79cc4d43ff75\",\n        \"name\": \"Turn your Java EE Monoliths into Microservices with WildFly Swarm\",\n        \"description\": \"In this talk we will be introduced to WildFly Swarm, a sister project to WildFly, once known as the JBoss Application Server.<br /> <br /> WildFly has evolved into the Swiss Army knife of application servers providing a robust, modular, lightweight, fully manageable and fast runtime, optimized for the cloud, implementing the complete set of Java EE7 APIs.<br /> <br /> WildFly Swarm on the other hand gives you the ability to create fat jars that bundle together your application and only the server parts you need as well as a whole set of additional services that go well beyond Java EE and help you integrate seamlessly with containerized orchestrated cloud based environments. <br /> <br /> Thus with WildFly &amp; WildFly Swarm you can gradually adopt DevOps practices and build upon your existing Java EE expertise to make the transition from Monoliths to Self Contained Systems and Microservices architectures, taking Enterprise Java to a whole new level.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Dimitris Andreadis\"\n        ],\n        \"start\": \"2017-02-09 16:00:00\",\n        \"end\": 1486659000\n      },\n      {\n        \"id\": \"a7c1f4202ab1be9cc1bf16a6a6e2d0d9\",\n        \"name\": \"Preparez-vous a la modularite selon Java 9\",\n        \"description\": \"La principale nouveaut&eacute; de Java 9 viendra du cot&eacute; de la modularit&eacute;. Et qu'on le veuille ou non il faudra tenir compte de ce changement et s'y pr&eacute;parer.<br /> <br /> Dans la premi&egrave;re partie de cet atelier, nous expliquerons ce qui a motiv&eacute; cette &eacute;volution, puis nous verrons les principaux concepts sous-jacents. Vous serez alors pr&ecirc;ts &agrave; poser vos mains sur le clavier pour migrer une application vers java 9. <br /> <br /> Le premier objectif sera de la faire fonctionner avec un minimum d'effort en mode classpath. Vous verrez qu'il y a d&eacute;j&agrave; quelques &eacute;cueils. Ensuite vous y int&eacute;grerez de la modularit&eacute;, en d&eacute;finissant vos d&eacute;pendances et vos niveaux d'exports. Enfin, vous empaquetterez le r&eacute;sultat de votre travail avec jlink.\",\n        \"room\": \"WTC Mont-Blanc 2\",\n        \"speakers\": [\n          \"Alexis Hassler\",\n          \"Remy Forax\"\n        ],\n        \"start\": \"2017-02-08 09:30:00\",\n        \"end\": 1486557000\n      },\n      {\n        \"id\": \"abf262c7d1127d65deca2f044c8d61d6\",\n        \"name\": \"Batissons ensemble un pipeline avec Jenkins et Docker\",\n        \"description\": \"Le but de cet atelier sera de construire ensemble un pipeline de 'Livraison Continue' (Continuous Deployment) pour une application.<br /> <br /> Jenkins 2.0 (https://jenkins.io/2.0/) a introduit le concept de Pipeline en 1&egrave;re ligne, avec une configuration stock&eacute;e dans le code pour une automatisation parfaite.<br /> Docker est l'outil id&eacute;al pour faciliter les probl&eacute;matiques de type 'paquets, versions de logiciels, d&eacute;pendances'.<br /> <br /> Des pr&eacute;sentations sur ces outils existent par centaine. Mais les essayer 'grandeur nature' avec un speaker pour vous aider vous permettra de vous faire une id&eacute;e r&eacute;elle.<br /> Vous repartirez de cet atelier avec une vision claire des points forts et des points faible de ces outils, afin d'&ecirc;tre pr&ecirc;t &agrave; les utiliser dans les bonnes situations.<br /> <br /> De mani&egrave;re plus d&eacute;taill&eacute;es, nous traiterons:<br /> - Un petit tour du propri&eacute;taire de l'application 'd&eacute;mo' afin de la comprendre (0 pr&eacute;-r&eacute;quis)<br /> - Bien d&eacute;marrer avec Jenkins 2, quelques bonne pratiques de configuration<br /> - Prise en main de pipeline<br /> - Utilisation de Docker pour d&eacute;livrer l'application<br /> - Utilisation de Docker pour les tests<br /> - Utilisation de Docker pour Jenkins (inception) !\",\n        \"room\": \"WTC Mont-Blanc 1\",\n        \"speakers\": [\n          \"Damien Duportal\"\n        ],\n        \"start\": \"2017-02-08 14:00:00\",\n        \"end\": 1486573200\n      },\n      {\n        \"id\": \"ae0b7c89d74a649d2c23145bc496948a\",\n        \"name\": \"Having fun with Raspberry(s) and Apache projects\",\n        \"description\": \"You can do a lot with a Raspberry and ASF projects.<br /> <br /> From a Tiny object connected to Internet to a application running in the cloud.<br /> <br /> First Raspberry as a Sensor collecting data and sending it to Casandra.<br /> <br /> Second Raspberry as a 'server' running HTTPD and mod_python.<br /> <br /> Third small cluster of Apache Tomcat with Raspberry PIs, How to use Docker to build a cluster with 2 PIs and use HTTPD mod_proxy to load balance the cluster nodes.<br /> <br /> Fourth move the cluster to the cloud...<br /> <br /> Next limit is anything you can imagine ;-)\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Jean-Frederic Clere\"\n        ],\n        \"start\": \"2017-02-09 11:45:00\",\n        \"end\": 1486643700\n      },\n      {\n        \"id\": \"afff51cf2f56cdbc8193f8839f4a1a66\",\n        \"name\": \"Functional web applications with Kotlin and Spring\",\n        \"description\": \"Cette pr&eacute;sentation a pour but de vous montrer un nouveau type d'application fonctionnelle utilisant<strong> Spring Reactive</strong> ainsi que le langage <strong>Kotlin</strong> qui convient tout aussi bien &agrave; la programmation orient&eacute;e objet qu'&agrave; la programmation fonctionnelle.<br /><br />Je me baserai sur un exemple concret, en l'occurence le projet du nouveau site de la conf&eacute;rence Mix-IT dont je m'occupe et dont les sources sont <a href='https://github.com/mix-it/mixit' target='_blank'>disponibles sur GitHub</a>.<br />Cette conf&eacute;rence sera <strong>un live coding</strong> d'une version simplifi&eacute;e de ce site qui pr&eacute;sentera:<br /><ul><li>Le support Kotlin int&eacute;gr&eacute; &agrave; Spring Framework 5 (en exclusivit&eacute; mondiale ^^)</li><li>Le nouveau framework Spring Web functional</li><li>L'API de r&eacute;cup&eacute;ration de bean bas&eacute;e sur les lambdas (plus de proxy CGLIB)</li><li>Des classes immutables et une injection par constructeur plut&ocirc;t que par setter</li><li>La puissance des extensions Kotlin pour un code propre</li><li>Un rendu des template client et server avec Mustache</li><li>Une application l&eacute;g&egrave;re et Reactive bas&eacute;e sur Reactor Netty</li><li>L'utilisation de MongoDB via une API Reactive</li><li>Un fichier de build Gradle &eacute;crit &eacute;galement en Kotlin</li></ul>\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Sebastien Deleuze\"\n        ],\n        \"start\": \"2017-02-10 15:00:00\",\n        \"end\": 1486741800\n      },\n      {\n        \"id\": \"b141d402882de62c61138a6219859175\",\n        \"name\": \"Packages ? Tout compris !\",\n        \"description\": \"Le 11 Octobre 2016, Facebook &ndash; qui n'utilisait d&eacute;j&agrave; plus NPM &ndash; a open-sourc&eacute; avec google son propre gestionnaire de paquets : 'yarn'. Comment accueillir la nouvelle ? Doit-on se r&eacute;jouir &ndash; pour sa rapidit&eacute; notamment &ndash; ou s'inqui&eacute;ter de la disparition potentielle de 'NPM '?<br /> <br /> <br /> Afin d&rsquo;avoir un raisonnement logique pour r&eacute;pondre &agrave; cette question, je vous invite &agrave; prendre du recul sur les gestionnaire de paquets. Quel est leur r&ocirc;le ? Comment doivent-ils s&rsquo;utiliser ? Comment &ecirc;tre certain d&rsquo;avoir les m&ecirc;me version de nos d&eacute;pendances en production et en d&eacute;veloppement ? Comment g&eacute;rer les d&eacute;pendances : en arbre, &agrave; plat ou m&ecirc;me les deux &agrave; la fois ? Comment sont stock&eacute;s ces paquets, peuvent-ils &ecirc;tre supprim&eacute;s ?<br /> <br /> <br /> Continuons notre exploration et nous nous apercevons tr&egrave;s vite que les gestionnaires de paquets sont principalement influenc&eacute;s par la mani&egrave;re dont les d&eacute;pendances sont import&eacute;es dans notre code. Le TC-39 est en train de r&eacute;fl&eacute;chir sur les sp&eacute;cifications du ES Module Loader ; mettons-nous &agrave; leur place et voyons quelles sont les diff&eacute;rentes options.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Florent Berthelot\"\n        ],\n        \"start\": \"2017-02-09 15:00:00\",\n        \"end\": 1486655400\n      },\n      {\n        \"id\": \"b28b5da39844c1e98aaf14c427949613\",\n        \"name\": \"Progressive Web Apps avec Polymer\",\n        \"description\": \"Progressive Web Apps (PWA) combine the best of the web and the best of apps. They are useful to users from the very first visit in a browser tab, no install required. As the user progressively builds a relationship with the app over time, it becomes more and more powerful. It loads quickly, even on flaky networks, sends relevant push notifications, has an icon on the home screen, and loads as a top-level, full screen experience.<br /> <br /> And since last Google I/O, you can build PWAs with Polymer easily and without pain, using all the power and simplicity of web components.<br /> <br /> In this lab you will learn to build your first PWA using Polymer, how to make your PWA installable, how to manage the caching policies to give a nice offline UX to your users and you will even learn how to integrate in your PWA other new and upcoming web technologies like Physical Web.<br /> <br /> As we will mainly user available web components to build the app, a working knowledge of Polymer is not required to do the lab, we will introduce briefly the web-components concepts at the beginning of the session.\",\n        \"room\": \"WTC Kilimandjaro 1\",\n        \"speakers\": [\n          \"Audrey Neveu\",\n          \"Horacio Gonzalez\"\n        ],\n        \"start\": \"2017-02-08 14:00:00\",\n        \"end\": 1486573200\n      },\n      {\n        \"id\": \"b9c365bc2025b4e44a26b958a3b78048\",\n        \"name\": \"Security Enforcement of the Java MicroService Applications\",\n        \"description\": \"The security of the Java applications exposing RESTfull services is critical in many companies and business. The development<br /> of the Microservices cannot escape to this rule too.<br /> During this talk, we will present some techniques to secure the REST endpoint; using a Filter, the JAXRS <a href='https://github.com/Role' target='_blank'>@Role</a> annotation, the Security Constraint defined at the HTTP Server and challenge the pro and cons of the different approaches.<br /> Ultimately we will demonstrate how an API Management platform can  enforce the security of the REST endpoint while simplifying the  development &amp; its configuration.<br /> This  talk contains slides and demos\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Charles Moulliard\"\n        ],\n        \"start\": \"2017-02-09 14:00:00\",\n        \"end\": 1486651800\n      },\n      {\n        \"id\": \"bcadcc6df8d3b18770f88750907edf23\",\n        \"name\": \"Developpez une application 'times series' avec Apache Spark, Hbase et l'API Kafka\",\n        \"description\": \"De plus en plus d'applications capturent et analysent les donn&eacute;es temporelles en temps r&eacute;el; par exemple les applications qui traitent les donn&eacute;es provenant de vos objets connect&eacute;s.<br /> <br /> Ce Hands-On vous permettra de d&eacute;couvrir par la pratique les d&eacute;fis et architectures des application time series. Durant cet atelier vous d&eacute;velopperez une application utilisant des donn&eacute;es temporelles, en passant par les &eacute;tapes suivantes<br /> <br /> * D&eacute;couverte de Apache Spark et de son Shell<br /> * Capture du stream de donn&eacute;es avec l'API Kafka et int&eacute;gration avec Spark Streaming<br /> * Analyse et traitement les donn&eacute;es avec Spark (Core, SQL)<br /> * Cr&eacute;ation d'une application Spark en Java et/ou Scala<br /> * Int&eacute;gration Spark &amp; Hbase<br /> <br /> Cet atelier vous permettra donc de comprendre comment les backends d'applications que vous utilisez tous les jours sont d&eacute;velopp&eacute;s (analyse de log en temps reel, Web Profiling, IoT, Healthcare, T&eacute;l&eacute;m&eacute;trie,....)<br /> <br /> Cet atelier ne n&eacute;cessite pas d'experience avec Spark, Hbase ou Kafka, puisque vous d&eacute;couvrirez ces technologies durant les exercices.\",\n        \"room\": \"WTC Mont-Blanc 4\",\n        \"speakers\": [\n          \"Jean Helou\"\n        ],\n        \"start\": \"2017-02-08 14:00:00\",\n        \"end\": 1486573200\n      },\n      {\n        \"id\": \"bdf91d0643fe5ad34283d28c8efd5373\",\n        \"name\": \"Le mot de la fin / Last words...\",\n        \"description\": \"\",\n        \"room\": \"LIG Amphitheater\",\n        \"speakers\": [],\n        \"start\": \"2017-02-10 17:00:00\",\n        \"end\": 1486747800\n      },\n      {\n        \"id\": \"cbbab42260f386fc50bc7c633e9831f3\",\n        \"name\": \"Bluetooth Low Energy: vous saurez tout\",\n        \"description\": \"Avec l&rsquo;essor de l&rsquo;IoT, le Bluetototh Low Energy a fait son apparition en permettant &agrave; des objets de communiquer avec votre smartphone : thermom&egrave;tres, bracelets d&rsquo;activit&eacute;, mais aussi piloter votre cafeti&egrave;re pr&eacute;f&eacute;r&eacute;e. N&eacute;anmoins, ce protocole radio reste souvent myst&eacute;rieux pour les utilisateurs et les d&eacute;veloppeurs.<br /> <br /> Cette pr&eacute;sentation d&eacute;mystifiera son fonctionnement, son avenir avec l&rsquo;arriv&eacute;e du Bluetooth 5.0 et son impl&eacute;mentation sur les plateformes mobiles. Pour les plus bricoleurs de l'auditoire, nous verrons &eacute;galement comment cr&eacute;er rapidement son propre p&eacute;riph&eacute;rique BLE en utilisant un kit de d&eacute;veloppement grand public.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Alexis DUQUE\"\n        ],\n        \"start\": \"2017-02-09 10:45:00\",\n        \"end\": 1486640100\n      },\n      {\n        \"id\": \"cc82acbdcc190e0390143be104d2bf6d\",\n        \"name\": \"Creer et securiser ses microservices en 180 minutes avec WildFly Swarm, Keycloak et Forge\",\n        \"description\": \"Dans cette universit&eacute;, nous verrons comment - 'from Scratch' - on peut cr&eacute;er des microservices &agrave; l'aide de WildFly Swarm et de Forge. Une fois cr&eacute;&eacute;s, nous les s&eacute;curiserons gr&acirc;ce &agrave; KeyCLoak, un serveur Open Source de gestion d'identit&eacute; et d'authentification. <br /> Cette universit&eacute; sera tr&egrave;s orient&eacute;e 'live coding' et le public est d'ailleurs fortement invit&eacute; &agrave; participer activement lors de cet atelier.\",\n        \"room\": \"WTC Mont-Blanc 3\",\n        \"speakers\": [\n          \"Sebastien Blanc\"\n        ],\n        \"start\": \"2017-02-08 14:00:00\",\n        \"end\": 1486573200\n      },\n      {\n        \"id\": \"ce06d0a8735bc8722cc4be7c803b1967\",\n        \"name\": \"Hey Hubot!? How are you doing?\",\n        \"description\": \"## Description<br /> <br /> Hubot est, d'apr&egrave;s Wired, l'employ&eacute; le plus productif de Github... (et le moins cher), facile quand on est un bot. <br /> - Et si Hubot s'incarnait en quelque chose de plus physique? <br /> - Et si Hubot avait des oreilles?<br /> - Et si Hubot parlait?<br /> <br /> ... Et en plus Hubot il sait d&eacute;ployer vos projets ... <br /> <br /> - 'Hey Hubot, tu peux me lancer les tests?'<br /> - 'Yes Milord!'<br /> - 'Hey Hubot, qui le plus beau entre Daniel ou Philippe?'<br /> - 'Huston?'<br /> <br /> &Ccedil;a fait peur non? (Imaginez les bonnes blagues sur le plateau de d&eacute;veloppement - 'Hey Hubot, vas y, met en prod!' OMG!<br /> <br /> Le challenge de cette pr&eacute;sentation c'est de vous montrer comment faire du 'ChatOps' (par ex dans Slack, ou &eacute;quivalent) mais avec un bot 'physique' qui va nous '&eacute;couter'. Et nous nous aiderons pour cela de diff&eacute;rents SDK:<br /> <br /> - Hubot<br /> - Microsoft Cognitive Services<br /> - Alexa d'Amazon<br /> <br /> ## Details<br /> <br /> Durant ce talk nous utiliserons divers composants &eacute;lectroniques 'fa&ccedil;on IOT' (nano computer et/ou microcontroller, &eacute;cran, micro, ...) pour donner vie &agrave; Hubot et lui donner de quoi exprimer son humeur.<br /> <br /> ## Tags<br /> chatbot, reconnaissance vocale, analyse du lanagage, raspberry, IOT, productivit&eacute;<br /> <br /> ## Speakers<br /> <br /> [@k33g_org](https://github.com/k33g_org)<br /> <br /> [@danielpetisme](https://github.com/danielpetisme)\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Philippe Charriere\",\n          \"Daniel Petisme\"\n        ],\n        \"start\": \"2017-02-10 10:45:00\",\n        \"end\": 1486726500\n      },\n      {\n        \"id\": \"d623c5a82f75c7ad9f42cf437387d303\",\n        \"name\": \"Programmation reactive pour l'orchestration de services au sein de la JVM\",\n        \"description\": \"Lorsque vous effectuez une recherche d'assurance sur LesFurets.com, nous interrogeons jusqu&rsquo;&agrave; 40 partenaires pour offrir un maximum d'offres &agrave; nos clients. Pour collecter ces offres, nous utilisons des patterns &agrave; base de locks, threads et files d'attentes en m&eacute;moire pour orchestrer des services au sein de la JVM. Bien que matures, ces constructions sont de tr&egrave;s bas niveau et sont sujettes &agrave; de nombreuses erreurs: il manque des abstractions pour aider &agrave; mettre en &oelig;uvre des politiques pour l'optimisation des ressources, la r&eacute;silience et la performance. La programmation r&eacute;active propose une approche diff&eacute;rente pour aborder ces probl&egrave;mes de concurrence en permettant aux d&eacute;veloppeurs de d&eacute;crire les op&eacute;rations sur les flux de donn&eacute;es. Dans cette pr&eacute;sentation, nous comparons diff&eacute;rents patterns pour appliquer une programmation r&eacute;active sur un composant critique de notre architecture, et donnons des exemples de diff&eacute;rentes API telles que RxJava2, Reactive Streams (Java 9 Flow) et CompletableFutures pour impl&eacute;menter une orchestration de services tout en garantissant la qualit&eacute; de services pour les utilisateurs.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Ozan Gunalp\"\n        ],\n        \"start\": \"2017-02-10 15:00:00\",\n        \"end\": 1486741800\n      },\n      {\n        \"id\": \"d7cd2861d4dbc1d352c0e0c3cd063839\",\n        \"name\": \"Fast Cars, Big Data - Ou comment le streaming peut aider la Formule 1!\",\n        \"description\": \"Les voitures, et tout particuli&egrave;rement les voitures de courses, g&eacute;n&egrave;rent &eacute;norm&eacute;ment de donn&eacute;es. Durant cette pr&eacute;sentation, bas&eacute;e sur des d&eacute;monstrations, vous verrez comment :<br /> <br /> Capturer et traiter les donn&eacute;es en temps r&eacute;el avec l&rsquo;API Kafka et Spark<br /> Analyser ces donn&eacute;es avec Apache Spark et Drill<br /> Le but de cette pr&eacute;sentation, bas&eacute;e sur des d&eacute;monstrations est de montrer qu&rsquo;il est possible aujourd&rsquo;hui, sur une seule plateforme big data:<br /> <br /> * De capturer les donn&eacute;es en temps reel sous forme de flux avec Kafka<br /> * Les traiter avec Spark Streaming<br /> * Les stocker sous differentes formes en fonction des besoins fichiers (JSON, Parquet), mais aussi base nosql (HBase, MapRDB JSON, &hellip;)<br /> * Les analyser en mode batch par exemple pour faire de la maintenance predictive via du machine learning avec Spark ML, ou plus simplement des requetes SQL avec Apache Drill.<br /> <br /> Le projet est disponible en [open source](https://github.com/mapr-demos/racing-time-series) et s&rsquo;appuie sur:<br /> <br /> * Des Producers/Consumers Kafka<br /> * Spark et Spark Streaming pour le traitement de l&rsquo;information en temps reel et batch.<br /> * Une Web Application pour la visualisation en temps reel avec Kafka Consumer+Web Socket<br /> * Un simulateur de course pour la generation des donn&eacute;es [TORCS](http://torcs.sourceforge.net/) (The Open Source Racing Car Simulator)\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Tugdual Grall\"\n        ],\n        \"start\": \"2017-02-10 10:45:00\",\n        \"end\": 1486726500\n      },\n      {\n        \"id\": \"d7f1d637548369f50fa6f4621d61d37a\",\n        \"name\": \"Continuous deployment, prenez le large avec Spinnaker!\",\n        \"description\": \"Spinnaker est un outil open source de d&eacute;ploiement en continu multi-cloud principalement d&eacute;velopp&eacute; par et pour Netflix, Google, Microsoft et Pivotal. <br /> Vous savez d&eacute;j&agrave; construire vos applications avec Jenkins, venez d&eacute;couvrir comment automatiser tous vos d&eacute;ploiements.<br /> Nous verrons ensemble comment cr&eacute;er une plate forme compl&egrave;te de d&eacute;ploiement en continu jusqu'en production, &agrave; base de strat&eacute;gies canary ou blue/green avec la s&eacute;curit&eacute; du rollback en un clic.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Stephane Lagraulet\"\n        ],\n        \"start\": \"2017-02-10 16:00:00\",\n        \"end\": 1486745400\n      },\n      {\n        \"id\": \"d97548009e3f7a8f82f3dd4611f8f022\",\n        \"name\": \"Ceylon 1.3 dans tous ses etats\",\n        \"description\": \"Depuis la sortie de Ceylon 1.3, Ceylon marche sur quasi tous les environements. Lors de cette conf&eacute;rence nous vous montrerons comment faire tourner Ceylon sur un maximum de plate-formes : Vert.x, WildFly, WildFly Swarm, Android, iPhone, Spring Boot, OSGi, fat-jar et JBoss Modules. Un max de d&eacute;mos, un minimum de bla-bla !\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Stephane Epardaud\"\n        ],\n        \"start\": \"2017-02-09 16:00:00\",\n        \"end\": 1486659000\n      },\n      {\n        \"id\": \"da4ff049dbd7cfbd4c88bae3acdd9e9b\",\n        \"name\": \"Realite virtuelle et holographie\",\n        \"description\": \"Venez d&eacute;couvrir les opportunit&eacute;s propos&eacute;es par HoloLens de Microsoft et d&eacute;couvrez les sc&eacute;narii les plus innovants et les plus propices pour le contexte de la r&eacute;alit&eacute; mixte.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"michel Rousseau\"\n        ],\n        \"start\": \"2017-02-10 14:00:00\",\n        \"end\": 1486738200\n      },\n      {\n        \"id\": \"dc7541d71005f18af4fc5865f45d2286\",\n        \"name\": \"Comment gerer un projet de developpement avec GitHub de maniere asynchrone avec une equipe 'dispersee'\",\n        \"description\": \"Lors de cette universit&eacute; nous allons voir comment mettre en oeuvre tous le cycle de vie de production d'un projet &agrave; travers les points suivants:<br /> <br /> - rappels de bases pour Git<br /> - initialiser un projet sur GitHub<br /> - comment mettre en oeuvre/int&eacute;grer un syst&egrave;me d'int&eacute;gration continue (utilisation des webhooks et des API GitHub)<br /> - notamment avec Jenkins<br /> - mais aussi en simulant un serveur de CI en quelques lignes de code JavaScript<br /> - comment utiliser GitHub Flow, les pull requests, les issues, project afin de mettre en place un mode de communication efficace avec votre &eacute;quipe (o&ugrave; qu'elle soit)<br /> - faire du chatops gr&acirc;ce &agrave; Hubot et un serveur de chat <br /> - comment faire son bot<br /> - et surtout &agrave; quoi peut-il r&eacute;ellement servir?<br /> <br /> L'objectif de cette universit&eacute; est de vous donner une vision globale d'un projet de d&eacute;veloppement, mais aussi de pouvoir appliquer des bonnes pratiques d&egrave;s le lendemain.<br /> <br /> Cette universit&eacute; s'adresse &agrave; tous les niveaux, il y aura du code, mais m&ecirc;me un profil non codeur peut y trouver de l'int&eacute;r&ecirc;t, tout particuli&egrave;rement sur les aspects communication.\",\n        \"room\": \"WTC Mont-Blanc 1\",\n        \"speakers\": [\n          \"Philippe Charriere\"\n        ],\n        \"start\": \"2017-02-08 09:30:00\",\n        \"end\": 1486557000\n      },\n      {\n        \"id\": \"e2733cd6a6fa49d8a687669eeb4547d4\",\n        \"name\": \"La grande famille OAuth 2.0\",\n        \"description\": \"OAuth 2.0 est un standard d'autorisation moderne (comprendre avec du JSON partout) qui permet de controller l'acc&egrave;s aux resources web. Cette pr&eacute;sentation vous apprendra les pas de danse OAuth 2.0, et vous initiera &agrave; la chor&eacute;graphie OpenId Connect. On parlera aussi des nouveaut&eacute;s: UMA, PoP, Privacy, Consent et autres acronymes barbares.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Guillaume Sauthier\"\n        ],\n        \"start\": \"2017-02-10 15:00:00\",\n        \"end\": 1486741800\n      },\n      {\n        \"id\": \"e9ca6536a3097c220824eb2460d30f60\",\n        \"name\": \"Lunch\",\n        \"description\": \"\",\n        \"room\": \"Public Space\",\n        \"speakers\": [],\n        \"start\": \"2017-02-10 12:35:00\",\n        \"end\": 1486735200\n      },\n      {\n        \"id\": \"ee11c4cce44e373392032b58c3c3f9be\",\n        \"name\": \"Unikernels: The next Big Little Thing ... ?\",\n        \"description\": \"The last 20 years or so we&rsquo;ve seen applications evolve from large monolithic components to virtualized monoliths, to virtualized then containerized micro-services. But there&rsquo;s a new kid on the block. Unikernels (or &ldquo;Library Operating Systems&rdquo;) have existed since the 1990&rsquo;s.<br /> <br /> <br /> Unlike virtual machines or containers which run applications on a monolithic kernel, Unikernels link an application with only the kernel components required by the application. Reducing the kernel+application binary promises to create even lighter weight solutions as well as increased security as the attack surface is significantly reduced.<br /> <br /> <br /> These are still early days for Unikernels. Nevertheless, we see significant developments such as Docker Inc.s 2016 purchase of &ldquo;Unikernel Systems&rdquo;, Ericsson ran a Unikernel-based NFV PoC, EMC implemented a Unik runtime (Go-based Unikernels) for Kubernetes..<br /> <br /> <br /> This talk will look at what Unikernels are, what are the various implementations of Unikernels and their maturity, how to get started developing with them, or even deploying them. Are they a threat to containers (spoiler: No)?\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Mike BRIGHT\"\n        ],\n        \"start\": \"2017-02-10 16:00:00\",\n        \"end\": 1486745400\n      },\n      {\n        \"id\": \"f30be54bdb353d0874680c46666eecbc\",\n        \"name\": \"Develop a Microservices architecture using WildFly Swarm\",\n        \"description\": \"# Introduction<br /> <br /> - What is a Microservices Architecture<br /> - Why WildFly Swarm fits very well within this model<br /> - Review the use case to be designed 'A REST endpoint will expose a CD Music store Service that we will query from a REST client to fetch the CD or create a new CD. The store is designed as a SQL database (PostgreSQL). The endpoints will be documented using Swagger. A circuit breaker will be implemented to return a static list of CD if the service operating the datasore is down.<br /> - Technology used : JAX-RS, CDI, JSON-P, Swagger<br /> - Patterns : Service Discovery, Circuit Breaker<br /> - Setup the environment<br /> <br /> # Implementation<br /> <br /> - Design and develop the solution locally<br /> - Add test case <br /> - Build, package &amp; deploy the solution on Kubernetes/OpenShift<br /> <br /> # Review<br /> <br /> - Discuss and challenge the solution developed<br /> - Q/A<br /> - What do you think about the lab/technology used\",\n        \"room\": \"WTC Mont-Blanc 3\",\n        \"speakers\": [\n          \"Charles Moulliard\"\n        ],\n        \"start\": \"2017-02-08 09:30:00\",\n        \"end\": 1486557000\n      },\n      {\n        \"id\": \"f4204ba34542c54a9c26b3f544d8240d\",\n        \"name\": \"Developper dans le cloud avec Docker et Eclipse Che\",\n        \"description\": \"Comment un environnement de d&eacute;veloppement Cloud et bas&eacute; sur Docker peut-il simplifier la vie des d&eacute;veloppeurs?<br /> <br /> Chez Codenvy, nous pensons que le d&eacute;veloppeur devrait se focaliser sur le code et non sur la configuration de l&rsquo;environnement de d&eacute;veloppement qui est l&rsquo;une des taches les plus fastidieuses du d&eacute;veloppeur. Pour cela, Eclipse Che b&eacute;n&eacute;ficie d&rsquo;un environnement d'ex&eacute;cution avec une configuration flexible bas&eacute;e sur Docker. <br /> <br /> Cette session permettra de d&eacute;couvrir Eclipse Che, les environnements de d&eacute;veloppement &agrave; la demande et les diff&eacute;rents choix d'utilisation.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Florent BENOIT\"\n        ],\n        \"start\": \"2017-02-09 10:45:00\",\n        \"end\": 1486640100\n      },\n      {\n        \"id\": \"f6457c406489c215b007a447c708de51\",\n        \"name\": \"Reactive and distributed applications with Vert.x\",\n        \"description\": \"Sorry guys, there is no free lunch. We are in 2016, but distributed applications are not simple. You can embrace any cool trends such as microservices, developing a distributed application is a challenge. Why? Well, because it&rsquo;s complicated. Distributed systems have many many reasons to fail, technically it&rsquo;s complicated, and the theory behind distributed systems is also complicated.<br /> <br /> Vert.x is a toolkit for build reactive distributed applications on top of the Java Virtual Machine. The application can be developed in Java of course but also in JavaScript, Groovy, Ruby or Ceylon. Vert.x does not hide the complexity of distributed applications; it lets you handle it. Vert.x applications are able to manage failures, can use several protocols and interaction styles (messages, RPC, REST,&hellip;), handle heavy load, integrate with almost anything, and cope with most of the requirements of modern applications.<br /> <br /> In this session, an introduction to vert.x is given while highlighting all the complexity to build distributed applications. For each hotspot, vert.x features are demonstrated. This includes clustering, distributed data structures, message-based communication, HTTP and REST, load balancing, failure recovery, integration with other technologies&hellip;.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Clement Escoffier\"\n        ],\n        \"start\": \"2017-02-10 10:45:00\",\n        \"end\": 1486726500\n      },\n      {\n        \"id\": \"f90ac962be5878a81938505d4f7d2fbd\",\n        \"name\": \"Kit d'orchestration avec docker 1.13\",\n        \"description\": \"Cr&eacute;er, d&eacute;marrer un conteneurs sur une machine est devenu un jeu<br /> d'enfant gr&acirc;ce &agrave; Docker. Mais il est encore relativement compliquer de<br /> monter un cluster de machine de fa&ccedil;on fiable et robuste sans &ecirc;tre un<br /> expert. Et s'il &eacute;tait possible de mettre en place un cluster Docker de<br /> fa&ccedil;on simple sans une arm&eacute;e d'expert ?<br /> <br /> C'est un sujet sur lequel les &eacute;quipes de Docker se sont pos&eacute;s et la<br /> nouvelle version 1.12 est la premi&egrave;re &eacute;tape !<br /> <br /> &Agrave; partir de le version 1.12, Docker embarque des fonctionnalit&eacute;s<br /> d'orchestration tr&egrave;s simple &agrave; mettre en place, robuste et s&eacute;curis&eacute;.<br /> <br /> Nous allons explorer les nouveaut&eacute;s apport&eacute;es par la version 1.12 (et<br /> superieurs) en mettant en place rapidement et simplement un cluster<br /> Docker, en quelques commandes.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Vincent Demeester\"\n        ],\n        \"start\": \"2017-02-09 11:45:00\",\n        \"end\": 1486643700\n      },\n      {\n        \"id\": \"fddf8ab9a3003fdcead6fd58c3ca767b\",\n        \"name\": \"LolCat on IoT\",\n        \"description\": \"Tout le monde sait que les chats r&egrave;gnent en ma&icirc;tres sur Internet, mais comment domineront-ils l&rsquo;IoT ?<br /> <br /> En partant d&rsquo;un MVP &ldquo;trouver mon chat&rdquo;, nous transformerons un simple collier en objet connect&eacute;.<br /> A base d&rsquo;arduino, GPS et r&eacute;seau sans fil, nous &eacute;voluerons vers une solution de suivi temps r&eacute;el, un MAAS (Matou As A Service) ou un Cat Social Network.<br /> <br /> PS : Aucun animal ne sera maltrait&eacute; durant cette session.\",\n        \"room\": \"TBA\",\n        \"speakers\": [\n          \"Erwann Thebault\",\n          \"Jeremie Huchet\",\n          \"Yoan Rousseau\"\n        ],\n        \"start\": \"2017-02-09 15:00:00\",\n        \"end\": 1486655400\n      }\n    ]\n);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function stateConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n    $stateProvider.state('app', {\n      abstract: true,\n      template: '<ui-view class=\"fill\"/>',\n      resolve: {\n        translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n          $translatePartialLoader.addPart('global');\n          return $translate.refresh();\n        }]\n      }\n    });\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .constant('DEFAULTS', {\n      general: {\n        language: 'fr',\n        name: 'Goldorak'\n      },\n      stt: {\n        name: 'Microsoft BingSpeech',\n        service: 'BingSpeech',\n        locale: 'fr-FR'\n      },\n      tts: {\n        name: 'Microsoft BingSpeech',\n        service: 'BingSpeech',\n        locale: 'fr-FR',\n        gender: 'male'\n      },\n      nlp: {\n        name: 'Microsoft Luis',\n        service: 'Luis'\n      },\n      BingSpeech: {\n        subscriptionKey: '8fb1a8c7b61a41d4838ddc60d84e6601'\n      },\n      Luis: {\n        subscriptionKey: \"ebc99ea1bfe8481d9c01f8145a553187\",\n        application: {\n          name: \"Conference\",\n          appId: \"496aaf6a-10e6-48fa-8b17-15658ddabde2\"\n        }\n      }\n    });\n})();\n","angular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/home/home.html\",\"<div class=\\\"fill\\\">\\n\t<div class=\\\"container content mt-3\\\" scroll-glue>\\n\t\t<div class=\\\"row mb-2\\\" ng-repeat=\\\"message in vm.messages\\\">\\n\t\t\t<div class=\\\"col-3 col-sm-1\\\">\\n\t\t\t\t<img class=\\\"rounded img-fluid\\\" ng-src=\\\"content/images/{{message.image}}.png\\\">\\n\t\t\t</div>\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<div class=\\\"card\\\" ng-class=\\\"message.user == \\'me\\' ? \\'card-outline-warning\\' : \\'card-outline-info\\'\\\">\\n\t\t\t\t\t<div class=\\\"card-block\\\">\\n\t\t\t\t\t\t<span class=\\\"card-title\\\"><strong class=\\\"capitalize\\\">{{message.user}}</strong></span>\\n\t\t\t\t\t\t<span class=\\\"card-subtitle\\\"><small class=\\\"ml-1 text-muted\\\">{{message.timestamp | amDateFormat: \\'HH:mm\\'}}</small></span>\\n\t\t\t\t\t\t<p class=\\\"card-text\\\" translate=\\\"{{message.content}}\\\" translate-values=\\\"{{message.values}}\\\"></p>\\n\t\t\t\t\t\t<audio ng-show=\\\"message.user != \\'me\\'\\\" src=\\\"{{message.audio}}\\\" autoplay></audio>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\t<div class=\\\"container hidden-sm-down fixed-bottom mb-5\\\">\\n\t\t<div class=\\\"row\\\">\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<form ng-submit=\\\"vm.submit()\\\">\\n\t\t\t\t\t<div class=\\\"input-group\\\">\\n\t\t\t\t\t\t<span class=\\\"input-group-btn\\\">\\n\t\t\t\t\t<button type=\\\"button\\\" ng-click=\\\"vm.toggleRecording()\\\" class=\\\"btn btn-lg\\\" ng-class=\\\"vm.isRecording() ? \\'btn-danger\\' : \\'btn-success\\'\\\">\\n\t\t\t\t\t\t<i class=\\\"fa fa-2x\\\" ng-class=\\\"vm.isRecording() ? \\'fa-microphone-slash\\' : \\'fa-microphone\\'\\\" aria-hidden=\\\"true\\\"></i>\\n\t\t\t</button>\\n\t\t\t\t</span>\\n\t\t\t\t\t\t<input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.text\\\" placeholder=\\\"{{ \\'home.form.placeholder\\' | translate }}\\\">\\n\t\t\t\t\t</div>\\n\t\t\t\t</form>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\t<div class=\\\"hidden-sm-up fixed-bottom\\\">\\n\t\t<div class=\\\"row\\\">\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<form ng-submit=\\\"vm.submit()\\\">\\n\t\t\t\t\t<div class=\\\"input-group\\\">\\n\t\t\t\t\t\t<span class=\\\"input-group-btn\\\">\\n\t\t\t\t\t<button type=\\\"button\\\" ng-click=\\\"vm.toggleRecording()\\\" class=\\\"btn no-rounded\\\" ng-class=\\\"vm.isRecording() ? \\'btn-danger\\' : \\'btn-success\\'\\\">\\n\t\t\t\t\t\t<i class=\\\"fa fa-2x\\\" ng-class=\\\"vm.isRecording() ? \\'fa-microphone-slash\\' : \\'fa-microphone\\'\\\" aria-hidden=\\\"true\\\"></i>\\n\t\t\t</button>\\n\t\t\t\t</span>\\n\t\t\t\t\t\t<input type=\\\"text\\\" class=\\\"form-control no-rounded\\\" ng-model=\\\"vm.text\\\" placeholder=\\\"{{ \\'home.form.placeholder\\' | translate }}\\\">\\n\t\t\t\t\t</div>\\n\t\t\t\t</form>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\\n</div>\\n\");\n$templateCache.put(\"app/settings/settings.html\",\"<div class=\\\"container mt-3\\\">\\n  <form>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.general.title\\\">General</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.general.name\\\">Bot Name</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"vm.settings.general.name\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"language\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.general.language\\\">Language</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.general.language\\\" ng-options=\\\"it for it in vm.languages track by it\\\"></select>\\n      </div>\\n    </div>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.stt.title\\\">Speech To Text</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"stt_locale\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.locale\\\">Locale</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.stt.locale\\\" ng-options=\\\"it for it in vm.locales track by it\\\"></select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"sst_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.stt\\\" ng-options=\\\"it.name for it in vm.sttEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft BingSpeech</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"BingSpeech_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.BingSpeech.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"BingSpeech_subscription_key\\\" placeholder=\\\"The BingSpeech Subscription Key to use\\\" ng-model=\\\"vm.settings.BingSpeech.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.tts.title\\\">Text To Speech</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"tts_locale\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.locale\\\">Locale</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.tts.locale\\\" ng-options=\\\"it for it in vm.locales track by it\\\"></select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"tts_gender\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.tts.gender\\\">Gender</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.tts.gender\\\">\\n          <option value=\\\"female\\\" translate=\\\"global.gender.female\\\">Female</option>\\n          <option value=\\\"male\\\" translate=\\\"global.gender.male\\\">Male</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"tts_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.tts\\\" ng-options=\\\"it.name for it in vm.ttsEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft BingSpeech</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"BingSpeech_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.BingSpeech.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"BingSpeech_subscription_key\\\" placeholder=\\\"The BingSpeech Subscription Key to use\\\" ng-model=\\\"vm.settings.BingSpeech.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.nlp.title\\\">Natural Language Processor</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"nlp_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.nlp.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.nlp\\\" ng-options=\\\"it.name for it in vm.nlpEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft Luis</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"luis_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.Luis.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"luis_subscription_key\\\" placeholder=\\\"The Luis Subscription Key to use\\\" ng-model=\\\"vm.settings.Luis.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"application\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.Luis.application\\\">Application</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.Luis.application\\\" ng-options=\\\"it.name for it in vm.luisApplciations track by it.appId\\\"></select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"offset-sm-2 col-sm-10 text-right\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" ng-click=\\\"vm.reset()\\\"><i class=\\\"fa fa-times-circle\\\" aria-hidden=\\\"true\\\"></i>&nbsp;<span translate=\\\"settings.reset\\\">Reset</span></button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.save()\\\"><i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;<span translate=\\\"settings.save\\\">Save</span></button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\");}]);"]}