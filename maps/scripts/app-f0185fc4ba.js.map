{"version":3,"sources":["app/app.module.js","app/components/locale/locale.service.js","app/components/locale/locale.constants.js","app/components/language/languages.constants.js","app/components/language/language.service.js","app/components/bot/bot.service.js","app/blocks/handlers/settings.handler.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/localstorage.config.js","app/blocks/config/ translation.config.js","app/settings/settings.state.js","app/settings/settings.service.js","app/settings/settings.controller.js","app/services/snowcamp2017-replies.js","app/services/replies.service.js","app/services/microphone.service.js","app/services/luis.service.js","app/services/hears.service.js","app/services/brain.services.js","app/services/bing-speech.service.js","app/home/home.state.js","app/home/home.controller.js","i18n/angular-locale_fr.js","i18n/angular-locale_en.js","app/app.state.js","app/app.constants.js","templateCacheHtml.js"],"names":["run","settingssHandler","initialize","angular","module","$inject","LocaleService","LOCALES","getAll","service","factory","constant","LanguageService","$q","$translate","LANGUAGES","tmhDynamicLocale","getCurrent","deferred","defer","language","storage","get","resolve","promise","changeLanguage","locale","languageKey","slice","use","set","Bot","$rootScope","Hears","Brain","Replies","startListening","isListening","stopListening","then","utterance","$emit","getIntent","text","predict","reply","intent","converse","expression","Settings","Luis","BingSpeech","update","load","settingsSavedSuccess","$on","event","settings","isDefined","general","useLocale","stt","useSpeechToText","useNaturalLanguageProcessor","nlp","useSubscriptionKey","subscriptionKey","useApplication","application","translationStorageProvider","$cookies","$log","name","indexOf","getObject","info","putObject","put","value","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","config","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","stateConfig","$stateProvider","state","parent","url","templateUrl","controller","controllerAs","translatePartialLoader","$translatePartialLoader","addPart","refresh","locales","luisApplications","getApplications","$promise","$localStorage","DEFAULTS","save","Object","assign","defaults","SettingsController","$state","vm","go","this","languages","sttEngines","nlpEngines","luisApplciations","Snowcamp2017Replies","JSON","stringify","$injector","useReplies","replies","$replies","Microphone","$window","getAudioPermission","navigator","getUserMedia","audio","stream","error","reject","startRecording","recorder","RecordRTC","type","numberOfAudioChannels","recording","stopRecording","getBlob","isRecording","webkitGetUserMedia","mozGetUserMedia","LuisProvider","$http","$subscriptionKey","$application","getApplication","appId","Error","predictEndpoint","$luisApiUrl","data","push","post","headers","Ocp-Apim-Subscription-Key","response","getJsonData","status","intentResponse","IntentsResults","Name","entities","EntitiesResults","$get","setLuisApiUrl","luisApiUrl","provider","$locale","debug","$stt","getSTTInstance","sst","recognize","SpeechToText","$nlp","getNLPInstance","NaturalLanguageProcessor","BingSpeechProvider","uuid4","getToken","token","$BingSpeechApiUrl","params","version","requestid","generate","appID","format","device.os","scenarios","instanceid","Authorization","Content-Type","getSpeechResponse","speechResponse","header","lexical","charAt","toUpperCase","authenticationToken","tokenExpirationDate","Date","now","$issueTokenUrl","storeToken","$defaultSubscriptionKey","useDefaultSubscriptionKey","defaultSubscriptionKey","HomeController","$scope","hotkeys","welcomeMessage","messages","user","timestamp","getTime","content","toggleRecording","process","handleError","request","submit","add","combo","description","instant","callback","$provide","PLURAL_CATEGORY","ZERO","ONE","TWO","FEW","MANY","OTHER","DATETIME_FORMATS","AMPMS","DAY","ERANAMES","ERAS","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","STANDALONEMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","NUMBER_FORMATS","CURRENCY_SYM","DECIMAL_SEP","GROUP_SEP","PATTERNS","gSize","lgSize","maxFrac","minFrac","minInt","negPre","negSuf","posPre","posSuf","id","localeID","pluralCat","n","opt_precision","i","getDecimals","length","getVF","v","undefined","Math","min","base","pow","f","vf","$urlRouterProvider","otherwise","abstract","template","$templateCache"],"mappings":"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","file":"../../scripts/app-f0185fc4ba.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular\n    .module('app', [\n      'ui.router',\n      'ui.bootstrap',\n      'ngStorage',\n      'ngCookies',\n      'uuid4',\n      'angularMoment',\n      'luegg.directives',\n      'ngCookies',\n      'tmh.dynamicLocale',\n      'pascalprecht.translate',\n      'cfp.hotkeys'\n    ]).run(run);\n\n  run.$inject = ['settingssHandler'];\n\n  function run(settingssHandler) {\n    settingssHandler.initialize();\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('LocaleService', LocaleService);\n\n  LocaleService.$inject = ['LOCALES'];\n\n  function LocaleService(LOCALES) {\n    var service = {\n      getAll: getAll\n    };\n\n    function getAll() {\n      return LOCALES;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n\n    /*\n     Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     They are written in English to avoid character encoding issues (not a perfect solution)\n     */\n    .constant('LOCALES', [\n      \"de-DE\",\n      \"es-ES\",\n      \"en-GB\",\n      \"en-US\",\n      \"fr-FR\",\n      \"it-IT\",\n      \"zh-CN\",\n      \"zh-TW\",\n      \"ja-JP\",\n      \"en-IN\",\n      \"pt-BR\",\n      \"ko-KR\",\n      \"fr-CA\",\n      \"en-AU\",\n      \"zh-HK\",\n      \"ar-EG\",\n      \"fi-FI\",\n      \"vpt-PT\",\n      \"en-NZ\",\n      \"pl-PL\",\n      \"en-CA\",\n      \"ru-RU\",\n      \"da-DK\",\n      \"nl-NL\",\n      \"ca-ES\",\n      \"nb-NO\",\n      \"es-MX\",\n      \"sv-SE\"\n    ]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n\n    /*\n     Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     They are written in English to avoid character encoding issues (not a perfect solution)\n     */\n    .constant('LANGUAGES', [\n      'en',\n      'fr'\n    ]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('LanguageService', LanguageService);\n\n  LanguageService.$inject = ['$q', '$translate', 'LANGUAGES', 'tmhDynamicLocale'];\n\n  function LanguageService($q, $translate, LANGUAGES, tmhDynamicLocale) {\n    var service = {\n      getAll: getAll,\n      getCurrent: getCurrent,\n      changeLanguage: changeLanguage\n    };\n\n    return service;\n\n    function getAll() {\n      return LANGUAGES;\n    }\n\n    function getCurrent() {\n      var deferred = $q.defer();\n      var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n      deferred.resolve(language);\n      return deferred.promise;\n    }\n\n    function changeLanguage(locale) {\n      var languageKey = locale.slice(0, 2);\n      if (languageKey) {\n        $translate.use(languageKey);\n        tmhDynamicLocale.set(languageKey);\n      }\n    }\n  }\n})();\n"," (function () {\n   'use strict';\n   angular\n     .module('app')\n     .factory('Bot', Bot);\n\n   Bot.$inject = ['$rootScope', 'Hears', 'Brain', 'Replies'];\n\n   function Bot($rootScope, Hears, Brain, Replies) {\n     var service = {\n       startListening: startListening,\n       isListening: isListening,\n       stopListening: stopListening,\n       converse: converse\n     };\n\n     function startListening() {\n       Hears.startListening();\n     }\n\n     function isListening() {\n       return Hears.isListening();\n     }\n\n     function stopListening() {\n       return Hears.stopListening().then(function (utterance) {\n         $rootScope.$emit('bot:listened', utterance);\n         return utterance;\n       });\n     }\n\n     function getIntent(text) {\n       return Brain.predict(text);\n     }\n\n     function reply(intent) {\n       return Replies.reply(intent);\n     }\n\n     function converse(expression) {\n       return getIntent(expression).then(reply);\n     }\n\n     return service;\n   }\n })();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('settingssHandler', settingssHandler);\n\n  settingssHandler.$inject = ['$rootScope', 'Settings', 'Hears', 'Brain', 'LanguageService', 'Luis', 'BingSpeech'];\n\n  function settingssHandler($rootScope, Settings, Hears, Brain, LanguageService, Luis, BingSpeech) {\n    return {\n      initialize: initialize\n    };\n\n    function initialize() {\n      update(Settings.load());\n\n      var settingsSavedSuccess = $rootScope.$on('settings:saved', function (event, settings) {\n        update(settings);\n      });\n\n      $rootScope.$on('$destroy', function () {\n        if (angular.isDefined(settingsSavedSuccess) && settingsSavedSuccess !== null) {\n          settingsSavedSuccess();\n        }\n      });\n    }\n\n    function update(settings) {\n      LanguageService.changeLanguage(settings.general.language);\n      Hears.useLocale(settings.stt.locale);\n      Hears.useSpeechToText(settings.stt.service);\n      Brain.useNaturalLanguageProcessor(settings.nlp.service);\n      Luis.useSubscriptionKey(settings.Luis.subscriptionKey);\n      Luis.useApplication(settings.Luis.application);\n      BingSpeech.useSubscriptionKey(settings.BingSpeech.subscriptionKey);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('translationStorageProvider', translationStorageProvider);\n\n  translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n  function translationStorageProvider($cookies, $log, LANGUAGES) {\n    return {\n      get: get,\n      put: put\n    };\n\n    function get(name) {\n      if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n        $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to prefered language \"en\"');\n        $cookies.putObject(name, 'en');\n      }\n      return $cookies.getObject(name);\n    }\n\n    function put(name, value) {\n      $cookies.putObject(name, value);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(localStorageConfig);\n\n  localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n  function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n    $localStorageProvider.setKeyPrefix('goldorak-');\n    $sessionStorageProvider.setKeyPrefix('goldorak-');\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(translationConfig);\n\n  translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n  function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n    // Initialize angular-translate\n    $translateProvider.useLoader('$translatePartialLoader', {\n      urlTemplate: 'i18n/{lang}/{part}.json'\n    });\n\n    $translateProvider.preferredLanguage('en');\n    $translateProvider.useStorage('translationStorageProvider');\n    $translateProvider.useSanitizeValueStrategy('escaped');\n    $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n    tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n    tmhDynamicLocaleProvider.useCookieStorage();\n    tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider'];\n\n  function stateConfig($stateProvider) {\n    $stateProvider\n      .state('settings', {\n        parent: 'app',\n        url: '/settings',\n        templateUrl: 'app/settings/settings.html',\n        controller: 'SettingsController',\n        controllerAs: 'vm',\n        resolve: {\n          translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n            $translatePartialLoader.addPart('settings');\n            $translatePartialLoader.addPart('global');\n            return $translate.refresh();\n          }],\n          locales: ['LocaleService', function (LocaleService) {\n            return LocaleService.getAll();\n          }],\n          luisApplications: ['Luis', function (Luis) {\n            return Luis.getApplications().$promise;\n          }]\n        }\n      });\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Settings', Settings);\n\n  Settings.$inject = ['$localStorage', '$log', '$rootScope', 'DEFAULTS'];\n\n  function Settings($localStorage, $log, $rootScope, DEFAULTS) {\n    var service = {\n      save: save,\n      load: load\n    };\n\n    var defaults = DEFAULTS;\n\n    var settings = load();\n    if (!settings) {\n      save(defaults);\n    }\n\n    function save(settings) {\n      settings = Object.assign({}, defaults, settings);\n      $localStorage.settings = settings;\n      $rootScope.$emit('settings:saved', settings);\n    }\n\n    function load() {\n      return $localStorage.settings;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('SettingsController', SettingsController);\n\n  SettingsController.$inject = ['$log', '$state', 'Settings', 'locales', 'luisApplications'];\n\n  function SettingsController($log, $state, Settings, locales, luisApplications) {\n    var vm = this;\n    vm.languages = ['en', 'fr'];\n    vm.sttEngines = [{\n      name: 'Microsoft BingSpeech',\n      service: 'BingSpeech'\n    }];\n    vm.nlpEngines = [{\n      name: 'Microsoft Luis',\n      service: 'Luis'\n    }];\n    vm.save = save;\n    vm.settings = Settings.load();\n    vm.locales = locales;\n    vm.luisApplciations = luisApplications;\n\n    function save() {\n      Settings.save(vm.settings);\n      $state.go('home');\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('Snowcamp2017Replies', Snowcamp2017Replies);\n\n  Snowcamp2017Replies.$inject = [];\n\n  function Snowcamp2017Replies() {\n    var service = {\n      reply: reply\n    };\n\n    function reply(intent) {\n      return \"Snowcamp: \" + JSON.stringify(intent);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('Replies', Replies);\n\n  Replies.$inject = ['$injector'];\n\n  function Replies($injector) {\n    var service = {\n      useReplies: useReplies,\n      reply: reply\n    };\n\n    var $replies = $injector.get('Snowcamp2017Replies');\n\n    function useReplies(replies) {\n      $replies = replies;\n    }\n\n    function reply(intent) {\n      return $replies.reply(intent);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Microphone', Microphone);\n\n  Microphone.$inject = ['$log', '$q', '$window'];\n\n  function Microphone($log, $q, $window) {\n    var service = {\n      startRecording: startRecording,\n      stopRecording: stopRecording,\n      isRecording: isRecording\n    };\n\n    $window.navigator.getUserMedia = $window.navigator.getUserMedia || $window.navigator.webkitGetUserMedia || $window.navigator.mozGetUserMedia;\n\n    function getAudioPermission() {\n      var deferred = $q.defer();\n      $window.navigator.getUserMedia({\n        audio: true\n      }, function (stream) {\n        deferred.resolve(stream);\n      }, function (error) {\n        deferred.reject(error);\n      });\n      return deferred.promise;\n    }\n\n    var recording = false;\n    var recorder;\n\n    function startRecording() {\n      getAudioPermission()\n        .then(function (stream) {\n          recorder = new RecordRTC(stream, {\n            type: 'audio',\n            numberOfAudioChannels: 1\n          });\n          recorder.startRecording();\n          recording = true;\n        }).catch(function (error) {\n          $log.error(error);\n        });\n    }\n\n    function stopRecording() {\n      var deferred = $q.defer();\n      recorder.stopRecording(function () {\n        recording = false;\n        deferred.resolve(recorder.getBlob());\n      });\n      return deferred.promise;\n    }\n\n    function isRecording() {\n      return recording;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .provider('Luis', LuisProvider);\n\n  LuisProvider.$inject = [];\n\n  function LuisProvider() {\n    this.$get = Luis;\n\n    var $luisApiUrl = 'https://westus.api.cognitive.microsoft.com/luis/v1.0/prog/apps';\n    this.setLuisApiUrl = function (luisApiUrl) {\n      $luisApiUrl = luisApiUrl;\n    };\n\n    Luis.$inject = ['$http', '$log', '$rootScope'];\n\n    function Luis($http, $log, $rootScope) {\n      var service = {\n        useSubscriptionKey: useSubscriptionKey,\n        useApplication: useApplication,\n        getApplication: getApplication,\n        getApplications: getApplications,\n        predict: predict\n      };\n\n      var $subscriptionKey;\n      var $application;\n\n      function useSubscriptionKey(subscriptionKey) {\n        $subscriptionKey = subscriptionKey;\n      }\n\n      function useApplication(application) {\n        $application = application;\n      }\n\n      function getApplication() {\n        return $application;\n      }\n\n      function getApplications() {\n        // if (!$subscriptionKey) {\n        //   throw new Error('You must set the subscriptionKey first');\n        // }\n        // return $http.get($luisApiUrl, {\n        //   headers: {\n        //     'Ocp-Apim-Subscription-Key': $subscriptionKey\n        //   }\n        // }).then(function (response) {\n        //   var data = response.data;\n        //   return data.map(function (application) {\n        //     return {\n        //       name: application.Name,\n        //       appId: application.ID\n        //     };\n        //   });\n        // });\n        return [{\n          name: \"Conference\",\n          appId: \"496aaf6a-10e6-48fa-8b17-15658ddabde2\"\n        }];\n      }\n\n      function predict(utterance) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        if (!$application) {\n          throw new Error(\"You must define at least one Luis application\");\n        }\n        $rootScope.$emit('luis:predict', {\n          application: $application,\n          utterance: utterance\n        });\n        var predictEndpoint = $luisApiUrl + \"/\" + $application.appId + \"/predict\";\n        var data = [];\n        data.push(utterance);\n        return $http.post(predictEndpoint, data, {\n          headers: {\n            'Ocp-Apim-Subscription-Key': $subscriptionKey\n          }\n        }).then(function(response) {\n          return getIntent(getJsonData(response));\n        });\n      }\n\n      function getJsonData(response) {\n        if (response && response.status === 200) {\n          return response.data[0];\n        }\n        throw new Error(\"Natural Language Understanding failed\");\n      }\n\n      function getIntent(intentResponse) {\n        var intent = {\n          application: $application,\n          intent: intentResponse.IntentsResults[0].Name,\n          entities: intentResponse.EntitiesResults\n        };\n        $rootScope.$emit('luis:getIntent', intent);\n        return intent;\n      }\n\n      return service;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Hears', Hears);\n\n  Hears.$inject = ['$injector', '$log', '$rootScope', 'Microphone'];\n\n  function Hears($injector, $log, $rootScope, Microphone) {\n\n    var service = {\n      startListening: startListening,\n      isListening: Microphone.isRecording,\n      stopListening: stopListening,\n      locale: locale,\n      useLocale: useLocale,\n      useSpeechToText: useSpeechToText\n    };\n\n    var $locale;\n    var $stt;\n\n    function useLocale(locale) {\n      $locale = locale;\n      $log.debug('Speech To Text Locale: ' + $locale);\n    }\n\n    function useSpeechToText(stt) {\n      $stt = stt;\n      $log.debug('Speech To Text Engine: ' + $stt);\n    }\n\n    function locale() {\n      return $locale;\n    }\n\n    function getSTTInstance() {\n      if ($stt) {\n        return $injector.get($stt);\n      }\n      throw new Error('You must define a SpeechToText engine');\n    }\n\n    function startListening() {\n      Microphone.startRecording();\n      $rootScope.$emit('hears:onStartListening', {\n        sst: $stt,\n        locale: $locale\n      });\n    }\n\n    function stopListening() {\n      $rootScope.$emit('hears:onStopListening', {\n        sst: $stt,\n        locale: $locale\n      });\n      return Microphone\n        .stopRecording()\n        .then(recognize);\n    }\n\n    function recognize(audio) {\n      var SpeechToText = getSTTInstance();\n      $rootScope.$emit('hears:onRecognize', {\n        sst: $stt,\n        locale: $locale,\n        audio: audio\n      });\n      return SpeechToText.recognize(audio, $locale);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Brain', Brain);\n\n  Brain.$inject = ['$injector', '$log', '$rootScope'];\n\n  function Brain($injector, $log, $rootScope) {\n    var service = {\n      predict: predict,\n      useNaturalLanguageProcessor: useNaturalLanguageProcessor\n    };\n\n    var $nlp;\n\n    function useNaturalLanguageProcessor(nlp) {\n      $nlp = nlp;\n      $log.debug('Natural Language Processor Engine: ' + $nlp);\n    }\n\n    function getNLPInstance() {\n      if ($nlp) {\n        return $injector.get($nlp);\n      }\n      throw new Error('You must define a NaturalLanguageProcessor engine');\n    }\n\n    function predict(text) {\n      var NaturalLanguageProcessor = getNLPInstance();\n      $rootScope.$emit('brain:onProcess', {\n        nlp: $nlp,\n        text: text\n      });\n      return NaturalLanguageProcessor.predict(text);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .provider('BingSpeech', BingSpeechProvider);\n\n  BingSpeechProvider.$inject = [];\n\n  function BingSpeechProvider() {\n    this.$get = BingSpeech;\n\n    var $defaultSubscriptionKey;\n    var $BingSpeechApiUrl = 'https://speech.platform.bing.com';\n    var $issueTokenUrl = 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\n    this.useDefaultSubscriptionKey = function (defaultSubscriptionKey) {\n      $defaultSubscriptionKey = defaultSubscriptionKey;\n    };\n\n    BingSpeech.$inject = ['$log', '$http', '$localStorage', '$q', 'uuid4'];\n\n    function BingSpeech($log, $http, $localStorage, $q, uuid4) {\n      var service = {\n        recognize: recognize,\n        useSubscriptionKey: useSubscriptionKey\n      };\n\n      var $subscriptionKey;\n\n      function useSubscriptionKey(subscriptionKey) {\n        $subscriptionKey = subscriptionKey;\n      }\n\n      function recognize(audio, locale) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        $log.debug(\"Recognizing audio with locale: \" + locale);\n        return getToken($subscriptionKey).then(function (token) {\n          return $http.post($BingSpeechApiUrl + '/recognize', audio, {\n            params: {\n              'version': '3.0',\n              'requestid': uuid4.generate(),\n              'appID': 'D4D52672-91D7-4C74-8AD8-42B1D98141A5', // magic value as per MS docs,\n              'format': 'json',\n              'locale': locale,\n              'device.os': '0_0',\n              'scenarios': 'ulm',\n              'instanceid': uuid4.generate()\n            },\n            headers: {\n              'Authorization': 'Bearer ' + token,\n              'Content-Type': 'audio/wav; samplerate=44100'\n            }\n          });\n        })\n        .then(function (response) {\n          return getSpeechResponse(getJsonData(response));\n        });\n      }\n\n      function getJsonData(response) {\n        if (response) {\n          return response.data;\n        }\n        throw new Error(\"Bing Speech recognition's reponse is empty\");\n      }\n\n      function getSpeechResponse(speechResponse) {\n        if (speechResponse.header.status === \"success\") {\n          var text = speechResponse.header.lexical;\n          $log.debug('Here: ' + text);\n          return text.charAt(0).toUpperCase() + text.slice(1);\n        }\n        throw new Error(\"Speech recognition failed\");\n      }\n\n      function getToken(subscriptionKey) {\n        var deferred = $q.defer();\n        var token = $localStorage.authenticationToken;\n        var tokenExpirationDate = $localStorage.tokenExpirationDate;\n\n        if (token && tokenExpirationDate > Date.now()) {\n          deferred.resolve(token);\n        } else {\n          $http.post($issueTokenUrl, {}, {\n            headers: {\n              'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n          }).then(function (response) {\n            token = response.data;\n            storeToken(token);\n            deferred.resolve(token);\n          }).catch(function (error) {\n            $log.error(\"Unable to authenticate the request with subscription key: \" + subscriptionKey);\n            deferred.reject(error);\n          });\n        }\n        return deferred.promise;\n      }\n\n      function storeToken(token) {\n        $localStorage.authenticationToken = token;\n        //      Refresh access token every 9 minutes\n        $localStorage.tokenExpirationDate = Date.now() + 9 * 60 * 1000;\n      }\n\n      return service;\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider'];\n\n  function stateConfig($stateProvider) {\n    $stateProvider\n      .state('home', {\n        parent: 'app',\n        url: '/',\n        templateUrl: 'app/home/home.html',\n        controller: 'HomeController',\n        controllerAs: 'vm',\n        resolve: {\n          translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n            $translatePartialLoader.addPart('home');\n            $translatePartialLoader.addPart('global');\n            return $translate.refresh();\n          }]\n        }\n      });\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('HomeController', HomeController);\n\n  HomeController.$inject = ['$rootScope', '$scope', '$log', '$translate', 'hotkeys', 'Bot'];\n\n  function HomeController($rootScope, $scope, $log, $translate, hotkeys, Bot) {\n    var vm = this;\n\n    vm.toggleRecording = toggleRecording;\n    vm.isRecording = Bot.isListening;\n    vm.submit = submit;\n    vm.messages = [];\n\n    hotkeys.add({\n      combo: 'ctrl+space',\n      description: $translate.instant('home.hotkey'),\n      callback: vm.toggleRecording\n    });\n\n    welcomeMessage();\n\n    function welcomeMessage() {\n      vm.messages.push({\n        user: \"goldorak\",\n        timestamp: new Date().getTime(),\n        content: 'home.welcome'\n      });\n    }\n\n    function toggleRecording() {\n      if (Bot.isListening()) {\n        Bot.stopListening().then(process).catch(handleError);\n      } else {\n        Bot.startListening();\n      }\n    }\n\n    function process(request) {\n      vm.messages.push({\n        user: \"me\",\n        timestamp: new Date().getTime(),\n        content: request\n      });\n\n      Bot.converse(request).then(function (response) {\n        vm.messages.push({\n          user: \"goldorak\",\n          timestamp: new Date().getTime(),\n          content: response\n        });\n      }).catch(function (error) {\n        vm.messages.push({\n          user: \"goldorak\",\n          timestamp: new Date().getTime(),\n          content: error\n        });\n      });\n    }\n\n    function handleError(error) {\n      $log.error(error);\n      vm.messages.push({\n        user: \"goldorak\",\n        timestamp: new Date().getTime(),\n        content: 'home.stt.failed'\n      });\n    }\n\n    function submit() {\n      if (vm.text) {\n        process(vm.text);\n      }\n      vm.text = \"\";\n    }\n\n    // var botListened = $rootScope.$on('bot::listened', function (event, data) {\n    //   process(data.text);\n    // });\n    //\n    // $rootScope.$on('$destroy', function () {\n    //   if (angular.isDefined(botListened) && botListened !== null) {\n    //     botListened();\n    //   }\n    // });\n  }\n})();\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"dimanche\",\n      \"lundi\",\n      \"mardi\",\n      \"mercredi\",\n      \"jeudi\",\n      \"vendredi\",\n      \"samedi\"\n    ],\n    \"ERANAMES\": [\n      \"avant J\\u00e9sus-Christ\",\n      \"apr\\u00e8s J\\u00e9sus-Christ\"\n    ],\n    \"ERAS\": [\n      \"av. J.-C.\",\n      \"ap. J.-C.\"\n    ],\n    \"FIRSTDAYOFWEEK\": 0,\n    \"MONTH\": [\n      \"janvier\",\n      \"f\\u00e9vrier\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"ao\\u00fbt\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"d\\u00e9cembre\"\n    ],\n    \"SHORTDAY\": [\n      \"dim.\",\n      \"lun.\",\n      \"mar.\",\n      \"mer.\",\n      \"jeu.\",\n      \"ven.\",\n      \"sam.\"\n    ],\n    \"SHORTMONTH\": [\n      \"janv.\",\n      \"f\\u00e9vr.\",\n      \"mars\",\n      \"avr.\",\n      \"mai\",\n      \"juin\",\n      \"juil.\",\n      \"ao\\u00fbt\",\n      \"sept.\",\n      \"oct.\",\n      \"nov.\",\n      \"d\\u00e9c.\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"Janvier\",\n      \"F\\u00e9vrier\",\n      \"Mars\",\n      \"Avril\",\n      \"Mai\",\n      \"Juin\",\n      \"Juillet\",\n      \"Ao\\u00fbt\",\n      \"Septembre\",\n      \"Octobre\",\n      \"Novembre\",\n      \"D\\u00e9cembre\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE d MMMM y\",\n    \"longDate\": \"d MMMM y\",\n    \"medium\": \"d MMM y HH:mm:ss\",\n    \"mediumDate\": \"d MMM y\",\n    \"mediumTime\": \"HH:mm:ss\",\n    \"short\": \"dd/MM/y HH:mm\",\n    \"shortDate\": \"dd/MM/y\",\n    \"shortTime\": \"HH:mm\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"\\u20ac\",\n    \"DECIMAL_SEP\": \",\",\n    \"GROUP_SEP\": \"\\u00a0\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\\u00a0\\u00a4\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\\u00a0\\u00a4\"\n      }\n    ]\n  },\n  \"id\": \"fr\",\n  \"localeID\": \"fr\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  if (i == 0 || i == 1) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\nfunction getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}\n\nfunction getVF(n, opt_precision) {\n  var v = opt_precision;\n\n  if (undefined === v) {\n    v = Math.min(getDecimals(n), 3);\n  }\n\n  var base = Math.pow(10, v);\n  var f = ((n * base) | 0) % base;\n  return {v: v, f: f};\n}\n\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    \"ERANAMES\": [\n      \"Before Christ\",\n      \"Anno Domini\"\n    ],\n    \"ERAS\": [\n      \"BC\",\n      \"AD\"\n    ],\n    \"FIRSTDAYOFWEEK\": 6,\n    \"MONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"SHORTDAY\": [\n      \"Sun\",\n      \"Mon\",\n      \"Tue\",\n      \"Wed\",\n      \"Thu\",\n      \"Fri\",\n      \"Sat\"\n    ],\n    \"SHORTMONTH\": [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE, MMMM d, y\",\n    \"longDate\": \"MMMM d, y\",\n    \"medium\": \"MMM d, y h:mm:ss a\",\n    \"mediumDate\": \"MMM d, y\",\n    \"mediumTime\": \"h:mm:ss a\",\n    \"short\": \"M/d/yy h:mm a\",\n    \"shortDate\": \"M/d/yy\",\n    \"shortTime\": \"h:mm a\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"$\",\n    \"DECIMAL_SEP\": \".\",\n    \"GROUP_SEP\": \",\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\\u00a4\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\\u00a4\",\n        \"posSuf\": \"\"\n      }\n    ]\n  },\n  \"id\": \"en\",\n  \"localeID\": \"en\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  var vf = getVF(n, opt_precision);  if (i == 1 && vf.v == 0) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function stateConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n    $stateProvider.state('app', {\n      abstract: true,\n      template: '<ui-view class=\"fill\"/>',\n      resolve: {\n        translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n          $translatePartialLoader.addPart('global');\n          return $translate.refresh();\n        }]\n      }\n    });\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .constant('DEFAULTS', {\n      general: {\n        language: 'en'\n      },\n      stt: {\n        name: 'Microsoft BingSpeech',\n        service: 'BingSpeech',\n        locale: 'en-US'\n      },\n      nlp: {\n        name: 'Microsoft Luis',\n        service: 'Luis'\n      },\n      BingSpeech: {\n        subscriptionKey: '8fb1a8c7b61a41d4838ddc60d84e6601'\n      },\n      Luis: {\n        subscriptionKey: \"ebc99ea1bfe8481d9c01f8145a553187\",\n        application: {\n          name: \"Snowcamp 2017\",\n          appId: \"496aaf6a-10e6-48fa-8b17-15658ddabde2\"\n        }\n      }\n    });\n})();\n","angular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/home/home.html\",\"<div class=\\\"fill\\\">\\n\t<div class=\\\"container content mt-3\\\" scroll-glue>\\n\t\t<div class=\\\"row mb-2\\\" ng-repeat=\\\"message in vm.messages\\\">\\n\t\t\t<div class=\\\"col-3 col-sm-1\\\">\\n\t\t\t\t<img class=\\\"rounded img-fluid\\\" ng-src=\\\"content/images/{{message.user}}.png\\\">\\n\t\t\t</div>\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<div class=\\\"card\\\" ng-class=\\\"message.user == \\'me\\' ? \\'card-outline-warning\\' : \\'card-outline-info\\'\\\">\\n\t\t\t\t\t<div class=\\\"card-block\\\">\\n\t\t\t\t\t\t<span class=\\\"card-title\\\"><strong class=\\\"capitalize\\\">{{message.user}}</strong></span>\\n\t\t\t\t\t\t<span class=\\\"card-subtitle\\\"><small class=\\\"ml-1 text-muted\\\">{{message.timestamp | amDateFormat: \\'HH:mm\\'}}</small></span>\\n\t\t\t\t\t\t<p class=\\\"card-text\\\" translate=\\\"{{message.content}}\\\" translate-values=\\\"{{message.values}}\\\"></p>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\t<div class=\\\"container hidden-sm-down\\\">\\n\t\t<div class=\\\"row\\\">\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<form ng-submit=\\\"vm.submit()\\\">\\n\t\t\t\t\t<div class=\\\"input-group\\\">\\n\t\t\t\t\t\t<span class=\\\"input-group-btn\\\">\\n\t\t\t\t\t<button type=\\\"button\\\" ng-click=\\\"vm.toggleRecording()\\\" class=\\\"btn btn-lg\\\" ng-class=\\\"vm.isRecording() ? \\'btn-danger\\' : \\'btn-success\\'\\\">\\n\t\t\t\t\t\t<i class=\\\"fa fa-2x\\\" ng-class=\\\"vm.isRecording() ? \\'fa-microphone-slash\\' : \\'fa-microphone\\'\\\" aria-hidden=\\\"true\\\"></i>\\n\t\t\t</button>\\n\t\t\t\t</span>\\n\t\t\t\t\t\t<input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.text\\\" placeholder=\\\"{{ \\'home.form.placeholder\\' | translate }}\\\">\\n\t\t\t\t\t</div>\\n\t\t\t\t</form>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\t<div class=\\\"hidden-sm-up fixed-bottom\\\">\\n\t\t<div class=\\\"row\\\">\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<form ng-submit=\\\"vm.submit()\\\">\\n\t\t\t\t\t<div class=\\\"input-group\\\">\\n\t\t\t\t\t\t<span class=\\\"input-group-btn\\\">\\n\t\t\t\t\t<button type=\\\"button\\\" ng-click=\\\"vm.toggleRecording()\\\" class=\\\"btn no-rounded\\\" ng-class=\\\"vm.isRecording() ? \\'btn-danger\\' : \\'btn-success\\'\\\">\\n\t\t\t\t\t\t<i class=\\\"fa fa-2x\\\" ng-class=\\\"vm.isRecording() ? \\'fa-microphone-slash\\' : \\'fa-microphone\\'\\\" aria-hidden=\\\"true\\\"></i>\\n\t\t\t</button>\\n\t\t\t\t</span>\\n\t\t\t\t\t\t<input type=\\\"text\\\" class=\\\"form-control no-rounded\\\" ng-model=\\\"vm.text\\\" placeholder=\\\"{{ \\'home.form.placeholder\\' | translate }}\\\">\\n\t\t\t\t\t</div>\\n\t\t\t\t</form>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\\n</div>\\n\");\n$templateCache.put(\"app/settings/settings.html\",\"<div class=\\\"container mt-3\\\">\\n  <form>\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.general.title\\\">General</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"language\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.general.language\\\">Language</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.general.language\\\" ng-options=\\\"it for it in vm.languages track by it\\\"></select>\\n      </div>\\n    </div>\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.stt.title\\\">Speach To Text</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"locale\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.stt.locale\\\">Locale</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"locale\\\" placeholder=\\\"en-US,fr-FR,..\\\" ng-model=\\\"vm.settings.stt.locale\\\" uib-typeahead=\\\"locale for locale in vm.locales | filter:$viewValue | limitTo:3\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"sst_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.stt.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.stt\\\" ng-options=\\\"it.name for it in vm.sttEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft BingSpeech</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"BingSpeech_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.BingSpeech.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"BingSpeech_subscription_key\\\" placeholder=\\\"The BingSpeech Subscription Key to use\\\" ng-model=\\\"vm.settings.BingSpeech.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.nlp.title\\\">Natural Language Processor</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"nlp_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.nlp.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.nlp\\\" ng-options=\\\"it.name for it in vm.nlpEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft Luis</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"luis_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.Luis.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"luis_subscription_key\\\" placeholder=\\\"The Luis Subscription Key to use\\\" ng-model=\\\"vm.settings.Luis.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"application\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.Luis.application\\\">Application</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.Luis.application\\\" ng-options=\\\"it.name for it in vm.luisApplciations track by it.appId\\\"></select>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"offset-sm-2 col-sm-10 text-right\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.save()\\\"><i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;<span translate=\\\"settings.save\\\">Save</span></button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\");}]);"]}